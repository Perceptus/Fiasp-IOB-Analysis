(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    536758,      10057]
NotebookOptionsPosition[    535056,      10002]
NotebookOutlinePosition[    535409,      10018]
CellTagsIndexPosition[    535366,      10015]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", "   ", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{
    "IOB", " ", "Curve", " ", "Analysis", " ", "for", " ", "FIASP", " ", 
     "and", " ", "Novolog", "\[IndentingNewLine]", "Ken", " ", "Stack"}], ",",
     " ", 
    RowBox[{
     RowBox[{"Perceptus", ".", "org"}], "\[IndentingNewLine]", "Copyright", 
     " ", 
     RowBox[{"(", "c", ")"}], " ", "2017", " ", 
     RowBox[{"Perceptus", ".", "org"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "SEE", " ", "MIT", " ", "LICENSE", " ", "TERMS", 
     " ", "BELOW"}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "raw", " ", "data", " ", "for", " ", "both", " ", "novolog", " ", "and", 
      " ", "fiasp", " ", "are", " ", "from", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"www", ".", "ncbi", ".", "nlm", ".", "nih", ".", "gov"}], 
         "/", "pmc"}], "/", "articles"}], "/", "PMC5299522"}], " ", 
      "\[IndentingNewLine]", "this", " ", "study", " ", "used", " ", "an", 
      " ", "actual", " ", "insulin", " ", "pump", " ", "to", " ", "deliver", 
      " ", "basal", " ", "and", " ", "bolus", " ", "for", " ", "a", " ", 
      "clamp", " ", "study"}]}], ",", " ", 
    RowBox[{
    "which", " ", "is", " ", "the", " ", "most", " ", "appropriate", " ", 
     "for", " ", "us", " ", "to", " ", "use", " ", "versus", " ", "studies", 
     " ", "that", " ", "mix", " ", "shots", " ", "with", " ", "longer", " ", 
     "acting", " ", "insulin"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "used", " ", "software", " ", "called", " ", "PlotDigitizer", 
    " ", "to", " ", "pick", " ", "off", " ", "about", " ", "125", " ", 
    "points", " ", "on", " ", "each", " ", "GIR", " ", "curve", " ", "to", 
    " ", "then", " ", "create", " ", "IOB", " ", "and", " ", 
    RowBox[{"dIOB", "/", "dt"}], " ", "curves"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"glucose", " ", "clamp", " ", "data"}], " ", "-", " ", 
    RowBox[{"GIR", " ", 
     RowBox[{"vs", ".", " ", "time"}], " ", "for", " ", "a", " ", "0.15", " ", 
     RowBox[{"U", "/", "kg"}], " ", "was", " ", "actually", " ", "a", " ", 
     "reasonable", " ", "dose", " ", "to", " ", "use", " ", "versus", " ", 
     "some", " ", "studies", " ", "that", " ", "used", " ", "2", "x", " ", 
     "more", " ", "insulin", " ", "for", " ", "their", " ", "bolus", " ", 
     "dose"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "data", " ", "only", " ", "goes", " ", "to", " ", "300", " ", "minutes", 
    " ", "but", " ", "I", " ", "fit", " ", "curves", " ", "until", " ", "360",
     " ", "min", " ", "since", " ", "GIR", " ", "wasnt", " ", "back", " ", 
    "to", " ", "basal", " ", "at", " ", "that", " ", "point"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "read", " ", "raw", " ", "data", " ", "from", " ", "csv", " ", "files"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rawnovolog", "=", 
     RowBox[{
     "Import", "[", "\"\</Users/kennethstack/documents/aspartcsii.csv\>\"", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rawfiasp", "=", 
     RowBox[{
     "Import", "[", "\"\</Users/kennethstack/documents/fiaspcsii.csv\>\"", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rawfiasp", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"rawfiasp", ",", 
       RowBox[{"{", 
        RowBox[{"360", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rawnovolog", "=", 
     RowBox[{"Append", "[", 
      RowBox[{"rawnovolog", ",", 
       RowBox[{"{", 
        RowBox[{"360", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "remove", " ", "any", " ", "potetnial", " ", "duplicate", " ", "points", 
      " ", "by", " ", "averaging", " ", "the", " ", "different", " ", "GIR", 
      " ", "data", " ", "at", " ", "the", " ", "same", " ", 
      RowBox[{"time", ".", "  ", "This"}], " ", "only", " ", "occurs", " ", 
      "for", " ", "maybe", " ", "1"}], "-", 
     RowBox[{
     "2", " ", "points", " ", "in", " ", "the", " ", "whole", " ", "set", " ",
       "could", " ", "have", " ", "probably", " ", "just", " ", "eliminated", 
      " ", "one", " ", "of", " ", "them"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sorted", "=", 
     RowBox[{"SortBy", "[", 
      RowBox[{"rawfiasp", ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"grouped", "=", 
     RowBox[{"GroupBy", "[", 
      RowBox[{"sorted", ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"count", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fiasp", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "grouped", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"av", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "for", " ", "duplicated", " ", "time", " ", "values", " ", "replace", " ",
      "with", " ", "a", " ", "single", " ", "averaged", " ", "value", " ", 
     "for", " ", "GIR"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"i", "<=", 
      RowBox[{"Length", "[", "grouped", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"av", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", 
          RowBox[{"grouped", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", 
        RowBox[{"av", "=", 
         RowBox[{"av", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"grouped", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"av", "=", 
       RowBox[{"av", "/", 
        RowBox[{"Length", "[", 
         RowBox[{"grouped", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fiasp", "[", 
        RowBox[{"[", "count", "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"grouped", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "av"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"count", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sorted", "=", 
     RowBox[{"SortBy", "[", 
      RowBox[{"rawnovolog", ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"grouped", "=", 
     RowBox[{"GroupBy", "[", 
      RowBox[{"sorted", ",", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "&"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"count", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"novolog", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "grouped", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"av", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"j", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "for", " ", "duplicated", " ", "time", " ", "values", " ", "replace", " ",
      "with", " ", "a", " ", "single", " ", "averaged", " ", "value", " ", 
     "for", " ", "GIR"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"While", "[", 
    RowBox[{
     RowBox[{"i", "<=", 
      RowBox[{"Length", "[", "grouped", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"av", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{"Length", "[", 
          RowBox[{"grouped", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"j", "++"}], ",", 
        RowBox[{"av", "=", 
         RowBox[{"av", "+", 
          RowBox[{
           RowBox[{
            RowBox[{"grouped", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"av", "=", 
       RowBox[{"av", "/", 
        RowBox[{"Length", "[", 
         RowBox[{"grouped", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"novolog", "[", 
        RowBox[{"[", "count", "]"}], "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"grouped", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "av"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"count", "++"}], ";", "\[IndentingNewLine]", 
      RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"**", 
     RowBox[{"*", "Raw", " ", "GIR", " ", "Data"}]}], " ", "****)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"novolog", ",", "fiasp"}], "}"}], ",", 
     RowBox[{"PlotTheme", "->", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<GIR mg/kg/min\>\""}], ",", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", " ", "10"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<novolog\>\"", ",", "\"\<fiasp\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.717254927075192*^9, 3.7172549355945263`*^9}, {
   3.717254983022209*^9, 3.717255294249734*^9}, {3.7172554117408667`*^9, 
   3.7172554120359507`*^9}, {3.717255454874366*^9, 3.717255498009523*^9}, {
   3.717256085880301*^9, 3.717256102270314*^9}, {3.7172568190638733`*^9, 
   3.717256916464671*^9}, {3.717256953217228*^9, 3.717257151427102*^9}, {
   3.7172578242753267`*^9, 3.717257884635767*^9}, {3.717258006498678*^9, 
   3.717258062651115*^9}, 3.717258122367364*^9, {3.717258209392111*^9, 
   3.71725823977542*^9}, {3.717349920816152*^9, 3.717349921647399*^9}, {
   3.717349955738578*^9, 3.7173499616812553`*^9}, {3.7173512692512503`*^9, 
   3.717351312879348*^9}, {3.717351362277417*^9, 3.717351363887774*^9}, {
   3.717351484993041*^9, 3.717351535439928*^9}, {3.717351682231175*^9, 
   3.717351756040917*^9}, {3.7173519091997643`*^9, 3.717352003419454*^9}, {
   3.71735232865942*^9, 3.71735235942693*^9}, {3.7173524442300043`*^9, 
   3.717352449867002*^9}, {3.717352484922393*^9, 3.717352489780695*^9}, {
   3.7173672073419523`*^9, 3.71736720816047*^9}, {3.71736740018834*^9, 
   3.717367462028884*^9}, {3.717367553761808*^9, 3.717367560591161*^9}, {
   3.7173698085272713`*^9, 3.7173698610642853`*^9}, 3.7174101364695587`*^9, {
   3.717411982828608*^9, 3.717412007465743*^9}, {3.717412080625263*^9, 
   3.717412108378043*^9}, {3.717412175924198*^9, 3.717412255170409*^9}, {
   3.717413474363522*^9, 3.7174136017329473`*^9}, {3.717414310094821*^9, 
   3.717414313375822*^9}, 3.717414355285728*^9, {3.718416311926937*^9, 
   3.7184163337961187`*^9}, {3.718417114209446*^9, 3.7184171680743847`*^9}, {
   3.718417256648047*^9, 3.7184172578947773`*^9}, {3.71841861042657*^9, 
   3.718418681548815*^9}, {3.718418721982511*^9, 3.718418723329996*^9}, 
   3.718418794521392*^9, {3.718419483080762*^9, 3.7184194946221323`*^9}, {
   3.718419532343953*^9, 3.71841956180449*^9}, {3.718449427010097*^9, 
   3.718449428098692*^9}, {3.718449517727703*^9, 3.718449538729354*^9}, {
   3.718712605884871*^9, 3.718712760110343*^9}, {3.718712889990831*^9, 
   3.718712975030785*^9}, {3.719923006992429*^9, 3.7199230074943237`*^9}, {
   3.719923037894293*^9, 3.719923118797483*^9}, {3.719923524947298*^9, 
   3.71992358109197*^9}, 3.719923631760364*^9, {3.7199236943154707`*^9, 
   3.719923707594778*^9}, {3.719923930216209*^9, 3.719923975569373*^9}, {
   3.722072801546076*^9, 3.72207286043817*^9}, {3.7220765126429853`*^9, 
   3.722076518343755*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
8L/7/b+1pX38
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
BHR3kA2wtZdQ8ZmZgv/9P/wH8rmmAQ==
         "]]}}, {{
        Directive[
         PointSize[0.011111111111111112`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledCircle]\"", FontSize -> 10, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1: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
0j78733/L85Jff4=
         "]]}, {
        Directive[
         PointSize[0.011111111111111112`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSquare]\"", FontSize -> 10, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxlVntcjNsa7h7KzFSmmktsl61s2Yk6LqXv6SZTIkWlpss03acZ0z12RzdE
CQll5JJsCZsog1y2IsfmyKVc2v3ak1ySdnRRJNX5Zr5z/jrr91t/vN9a61nv
73mf513f9LAN3hGaampqW8mpTk4Ntf8fzGcFy0rttxDpJTfi7MQNhF7GtkWi
3iYi36aP1nviCWHU7/gokqmJLfNSRs4uaCHmZwWmDqxlgtfPV+TmNBGvgn7u
sKubjsaR8cWC+maiyTOM4T9sia87XaK1OM3EnQs/S8od5yP3OI7eK3pCxWUL
4O8r25ctURBBY87fekQ2qDjfKTrwoItIvXmUbdVjCy1f2ryLhz8TbZe2pD9e
uARpV7d/umP5neCmCxasU7OD+Z/rVgz/oQ7z+m0VfjI7zDkQGDCZp4nyvUvV
PV0ccL06pXXrbC0M07sun9cDRrPbqsRr9ODqljBM7wNMaFvC1Y1oOJvfGq2W
6oxe4xVe318yEFzL09cQumLhq+JvGxcaoGXZRv9Tz1zhN/2t+bO/DJAxslTa
6OWGM39fm/E1wxCKdr2iyg9u6CFDxQcjbDDMuXW/cgXOjieWWNGZGCpuK8ot
4KG9zOKx+V4m1ibNKh4vcUfxb4OuThwT/E4rXXj8bw94MpKnZTYbY3Qoub3U
0RMmRzVC7Z1NMHj1z7zRUU/YCp8kpfQbQ/gxwMkhbTV+ieRlytgm8Fi/bfHz
Bi+MzCib1+ltirxdb/qnua+BOFG4qZ6MtRt2W6cOroH+w2R2TCULHh+0bAzG
vBG3PzR+cTULbwVlz21yfFBTVWE2JmOjZCVzp3uHD3Tl7lWL7Tkoqsxew9u4
FjJ5RsSvEzmwbJa9M+teC3HHm8252RxYTzjLDeCvw6W436wMAziQk+WqZvlC
o7n54qWbHNBWn98XUeWLRznXqlPsOHjeILbJHPFFqViycvUVNmSppcdnrvfD
6cs6cvfHLNgcr1n09b4fNr8WPbLksZERez2paLs/mEm/8ISf2VhScy/lpt96
eLo7Xi62YUNfY26u8ZwAZDmf8q7+Fwd2itUFxecCYN3d4LVqihnMAsLtFJcD
cUJxk1baZEbhhfIx7XBt//pgLlaRcl2SxMdVn6X+4+ZmiF826UV5CR8n6UFe
ioscvH08o3V4iI/X/2DfCszkYLl8YLQ5OggmLY1ffDS5VL3LgvB0p2tTC48L
7ytTt3bHB8P812OtHjIulNteDwZjt6L1cxTBxQHn/LhOnxCK3+scTNvavebK
kRCKp/ds6GTtd87/HgKHc5OZr+3ZVD78UFw/F1LFGWLh4b/JcSoU1k5pNfGz
/ptfYyhuT/76fb4GF4nRhT3pugLUSV7KLYo4KCiWGOYwBKh2nM1acoaN031P
PcMsBdgzpVDAPM8CS2k0iQD6HwLfJQ2b4vagBX/3SQE6bVN2fPA0hb+S8H4B
evPaM+aS63+kkAalh+GJ9uC8RBkLHKu2WTq2YVjr5/BgoJ2FhcpRFIYJ62KH
MJdF8f8gDNW6AVnTyViFFyaEsGbX6dnvTSh+CoUQ7+Etb3QyRW/FXY9Fw0Is
sRCc7Bk3RnKRqZavRjievKeFRbkbQ0X3pXBE1FsNDtxlgqEEnB2B8yQ9ck8m
XEh6R+Ij8HRDiG7jxil4UOYqHyiIgKGob47aSSOEKwXyKAKzat7y8/INqfsG
I9DqZd2ocDGk/B8VidvX+HdSZxhB2Y7aTkWigXPQbSzTEMryxF2LxFjElzeC
OgMo06ONRmKRsgBVDJBsZO2nR0HBfvlTXQcdJST9txyi0D5we8KrQjpVv6oo
uJTbbT88x4DCt4lGen+Vl6iWAXOlofKi4ZrlUGhOrn9MJ2yDaTF4x887c3+q
AYW3PAZ/rb/W45TIgFKOackx0OpIHs0+TMO3zaTAm2LAORI858Eefbwoly6b
tDoWR3RTo3rkdOq+pFhMFXMvGCvoINFrebdi8WXv3WgzJh1OoaSiPsWiSM32
Upx4MsWnmQhWknL16w16eLVpyjm3GBHlM8kkrFy0wzG0TITmbJN/anfpQilX
6Q0RQhxlF6Jrdaj8foyDBq3M/eFUXaxQAuTEYUGA2zojLR3KR+Nx+LzDnlcb
OREzW4c3x0rFqEv89GrvzAnU/RfEiLKUNa66qw3Vs/BCjIKPP6ScZGiDdLOp
FluCicPHoqp/0kHnSGXfU1sJUm7LXQ8+1ITqkUuTUH18UJPS+3MJ6g3pFocu
alB+C98A37lGmytDtKn6V2xAy0GnTlu5DlTvma4UB6bvSo4/pE3pmynFaO7n
1hfqmlDKP4uQwntS7Y0T1upUPmnk/kf99lfsxgkVTfukSNK/F/zJQY063yqF
T+EkoV7dGKHSX5cUcYH7Wn4w+k6o8u+Rwu+icCbD6hshVn7gxkPZLkqHvxBV
CaTBg+Px7bHSgIOESk/H4lEQdHyTqL2XUOmzJR4e99s6v77/SKj0PjkBFv2z
umS8fmJj12zrCYsTQFcKrKKPGCLtXi9KgF/JzRcMbjeVz6EEeM4L7M7X6qPO
X05AdwfZAFt7CRWfmSn43//DfwAMRKYD
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 360.}, {0, 7.45665}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"GIR mg/kg/min\"", TraditionalForm], 
     PlotRange -> {{0, 360.}, {0, 7.45665}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"novolog\"", "\"fiasp\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[FilledSquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledCircle]\"", ",", "10"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[FilledSquare]\"", ",", "10"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.719923602567062*^9, 3.719923639470462*^9, 
  3.7199237110136213`*^9, 3.719923849676606*^9, 3.7199239523133907`*^9, 
  3.719924160504674*^9, 3.720101954648095*^9, 3.7201020389682302`*^9, 
  3.72193288313544*^9, 3.7220733125612717`*^9, 3.722075001919595*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "interpolate", " ", "for", " ", "easier", " ", "manipulation", " ", 
     "with", " ", "Order", " ", "1"}], " ", "-", " ", 
    RowBox[{"straight", " ", "lines", " ", "between", " ", "points"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"novosmooth", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"novolog", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fiaspsmooth", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"fiasp", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxt", "=", 
     RowBox[{
      RowBox[{"novolog", "[", 
       RowBox[{"[", 
        RowBox[{"Length", "[", "novolog", "]"}], "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.717255321803938*^9, 3.717255333730722*^9}, {
   3.7172571952944717`*^9, 3.717257205373025*^9}, 3.717258309721272*^9, 
   3.717258341043166*^9, {3.7173521987137737`*^9, 3.717352217754274*^9}, {
   3.717352514477068*^9, 3.717352515407928*^9}, {3.7173674921237793`*^9, 
   3.717367522879717*^9}, {3.719924063937845*^9, 3.719924077776986*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"novosmooth", "[", "t", "]"}], ",", 
     RowBox[{"fiaspsmooth", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "maxt"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.717255345016365*^9, 3.717255368380499*^9}, {
   3.7172572175099916`*^9, 3.717257251550209*^9}, {3.7184195927328577`*^9, 
   3.71841959303433*^9}, 3.718449570713736*^9, 3.719924028024441*^9, {
   3.7199240754510307`*^9, 3.719924076041038*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
STJrCa3jQX3mypIXKmT9iLme2NLIw8MdNxJfkf1E6VSQocgnHrRu5vx7s4QC
jXOn79xoJ/23fjD0flQKw8zLvhu6eMi4EPKkjuQvPyNL9nEvD8Id61IbyH6t
dKc4tf4nDy1hWbqtpVLoU3tq5TlK8lHKWvz1jhRuFr8VHpjg4S7/su/frkpB
9tnXqHl/eYg9ey65O04Kbea92if4/ND/2cazL0IK6e+Hh+kCfrBZJa4+6CsF
V/uZ3KwFfjij1t3a7SYFWut8rqqoH8pPfvDfFkK+r9eiFWXifugbLJkuIO2d
6aZ+MpP0A8MiK5GaJgXxEcXtXgw/7J+/72YH2f9rIjUWDMr4IZfF0TSrlULS
H72nkbJ+aCzf/uzOdykICFtrnVzjB9W98h17RCiYXR65rFzLDz+GqmXEnSno
s6z6wbT1A6tpearOGNkv66tvZTv4IUVj4coMIVK/Ozey1V388Dhl7L4gk4o2
Tl+jBcsP1G2vP9SS+jy9f+RUI8eP3KcKPbXtqXANmbVg8/ywR/DKj8s8KugT
AgI/AvyQ450YNe8AFY37xSv2BvvhY2WYKO8kFWf46HsFdvkhsMHSr5u0Z50g
p56y2w8ZJpEls0fI/iy2bkh6nx8aiq6JSJLzsua0ZvatKD8Ir33jtnaJFJJp
+iyNQ37YcnH0jr7DUphdMWNWHvZDyKIVB+rFl0JgpU3D1kQ/vP7et++wxFJU
5biebEr2g3xp4V5NqaU4pOJj7n3SD9EpUXu6qUuh/3An/8/Tfmj2NY1MYyxF
SeWhSMGLfji2tDV8evlSFDRle2re8sNY0LyQMsWlCHYvoD/J9YOVUfXOncpL
sa6zpH5bvh9uMc4FLd+wFNk/akw5//nB7eXagEOaS+ET3sT365EfitJH/dQ2
LoX872+l+8v8sCS8jNe5eSnaD/aTi6sfAiwSfM/qLcUVgTGVM8/88HyFNdeY
WIozE9f++r8i/a3sLm5XW4qEHssag2rSP4Xi4oCVpD+vs/1H6snvj7sUHxRa
Chx3zbLu9ENTyrWi7BpJaEYvCF/b44euKXJhq/hfxVYaTmXbRQ/nmOdDkZAi
paREIupZmaVQVEiilM48kFBJSSSFUkLRIAqphEKlTE1IKpV4E2UqCimz7/l+
ruvc1957rb32vu/nx6FDn1u4ltK7F/0+VsWlt+mgu8p/uT2wF+JLvhfVn6Hj
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 360}, {0., 7.4542752807378045`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"novosmooth", "(", "t", ")"}], 
       RowBox[{"fiaspsmooth", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7184166086683197`*^9, 3.7184167244001293`*^9, 3.718416792527046*^9, 
   3.718416914937405*^9, 3.718417194267705*^9, 3.7184172629126987`*^9, 
   3.7184173038207693`*^9, 3.7184174330123053`*^9, 3.718417543082471*^9, 
   3.718418667485471*^9, 3.718418700894546*^9, 3.718418733761911*^9, 
   3.7184188050843687`*^9, 3.718419500964872*^9, 3.718419572605956*^9, 
   3.718419685019442*^9, 3.7184200988084087`*^9, 3.7184203314845257`*^9, {
   3.7184495298321867`*^9, 3.718449548808812*^9}, 3.718449589305645*^9, 
   3.718717114387463*^9, 3.719066343396364*^9, 3.719347431366613*^9, 
   3.71934748302732*^9, 3.719921513979208*^9, 3.719921823637743*^9, 
   3.719922215574155*^9, 3.719923564232782*^9, 3.7199236028629417`*^9, 
   3.719923640066884*^9, 3.719923711403326*^9, 3.719923850003023*^9, 
   3.719923952669862*^9, 3.719924021938814*^9, 3.719924160709312*^9, 
   3.72010195489812*^9, 3.7201020391638393`*^9, 3.721932883455481*^9, 
   3.722073312721775*^9, 3.722075002103304*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "calculate", " ", "total", " ", "areas", " ", "under", " ", "each", " ", 
     "GIR", " ", "curve", "\[IndentingNewLine]", "note", " ", "they", " ", 
     "are", " ", "virtually", " ", "the", " ", "same"}], " ", "-", " ", 
    RowBox[{
    "this", " ", "means", " ", "that", " ", "a", " ", "unit", " ", "of", " ", 
     "fiasp", " ", "and", " ", "a", " ", "unit", " ", "of", " ", "novolog", 
     " ", "will", " ", "drop", " ", "bg", " ", "the", " ", "same", " ", 
     "amount"}], " ", "-", " ", 
    RowBox[{
    "same", " ", "effect", " ", "just", " ", "fiasp", " ", "is", " ", 
     "faster"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"aucn", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"novosmooth", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{
         RowBox[{"novolog", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "novolog", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"aucf", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"fiaspsmooth", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{
         RowBox[{"fiasp", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "fiasp", "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.717255540737232*^9, 3.717255558364901*^9}, {
  3.717257265720374*^9, 3.717257285111277*^9}, {3.71725827798171*^9, 
  3.717258297664823*^9}, {3.717367533906145*^9, 3.717367543692389*^9}, {
  3.717370023796401*^9, 3.717370049119856*^9}, {3.718419597579774*^9, 
  3.718419602449548*^9}, {3.718449570751404*^9, 3.7184495707599916`*^9}, {
  3.719347342159449*^9, 3.719347344812024*^9}, {3.719347380464678*^9, 
  3.719347418253833*^9}, {3.719347453974811*^9, 3.719347458953867*^9}, {
  3.7199237968972607`*^9, 3.719923797623334*^9}}],

Cell[BoxData["1269.4129784006736`"], "Output",
 CellChangeTimes->{
  3.7172555627156553`*^9, 3.717255946808456*^9, 3.717256066195153*^9, 
   3.717256522460703*^9, 3.717257289558497*^9, 3.7172574532078123`*^9, 
   3.717257888141354*^9, 3.717258016829589*^9, {3.7172580480051117`*^9, 
   3.717258066105523*^9}, 3.717258125622746*^9, 3.717258213282186*^9, 
   3.717258245236473*^9, 3.717258321213924*^9, {3.7173499408896723`*^9, 
   3.717349968551177*^9}, 3.7173501002175703`*^9, 3.717350223170855*^9, 
   3.717350259702319*^9, 3.717351194288808*^9, 3.717351540285597*^9, 
   3.717351762747821*^9, 3.717352011072342*^9, {3.71735220539607*^9, 
   3.717352221174341*^9}, {3.717352495963108*^9, 3.717352520417573*^9}, 
   3.717352721570422*^9, {3.717353906257337*^9, 3.717353928356176*^9}, 
   3.7173594052295322`*^9, 3.717360053480288*^9, 3.7173603181593113`*^9, 
   3.717362065628014*^9, 3.717363426627067*^9, 3.717363457696135*^9, 
   3.717363585591077*^9, 3.717369153582617*^9, 3.717369197242285*^9, 
   3.71736979491501*^9, 3.717369880628954*^9, 3.717370010692453*^9, 
   3.7173706291051702`*^9, 3.717411243887266*^9, 3.717411386859383*^9, 
   3.717411549299501*^9, 3.7174126048805923`*^9, 3.717413441351274*^9, {
   3.7174143170705557`*^9, 3.717414359259055*^9}, 3.7174413278010674`*^9, 
   3.718416342343926*^9, 3.718416487366913*^9, 3.718416608774687*^9, 
   3.718416724456189*^9, 3.718416792613018*^9, 3.718416914994404*^9, 
   3.718417194352662*^9, 3.718417263067762*^9, 3.718417303901966*^9, 
   3.718417433105538*^9, 3.718417543178402*^9, 3.718418667612465*^9, 
   3.718418700967227*^9, 3.7184187338974333`*^9, 3.718418805159855*^9, 
   3.7184195010733232`*^9, 3.718419572656487*^9, 3.718419685138093*^9, 
   3.718420098892468*^9, 3.718420331559869*^9, {3.7184495299238977`*^9, 
   3.718449548893093*^9}, 3.718449589444251*^9, 3.718717114491414*^9, 
   3.719066343549474*^9, {3.719347424879073*^9, 3.719347431435019*^9}, 
   3.7193474830813*^9, 3.719921514067039*^9, 3.719921823720265*^9, 
   3.719922215629125*^9, 3.719923564263853*^9, 3.719923602942594*^9, 
   3.719923640139331*^9, 3.7199237114785223`*^9, 3.719923850078436*^9, 
   3.7199239527458963`*^9, 3.7199241608068132`*^9, 3.720101954998666*^9, 
   3.720102039254959*^9, 3.721932883566907*^9, 3.7220733127770433`*^9, 
   3.722075002171648*^9}],

Cell[BoxData["1281.963109324495`"], "Output",
 CellChangeTimes->{
  3.7172555627156553`*^9, 3.717255946808456*^9, 3.717256066195153*^9, 
   3.717256522460703*^9, 3.717257289558497*^9, 3.7172574532078123`*^9, 
   3.717257888141354*^9, 3.717258016829589*^9, {3.7172580480051117`*^9, 
   3.717258066105523*^9}, 3.717258125622746*^9, 3.717258213282186*^9, 
   3.717258245236473*^9, 3.717258321213924*^9, {3.7173499408896723`*^9, 
   3.717349968551177*^9}, 3.7173501002175703`*^9, 3.717350223170855*^9, 
   3.717350259702319*^9, 3.717351194288808*^9, 3.717351540285597*^9, 
   3.717351762747821*^9, 3.717352011072342*^9, {3.71735220539607*^9, 
   3.717352221174341*^9}, {3.717352495963108*^9, 3.717352520417573*^9}, 
   3.717352721570422*^9, {3.717353906257337*^9, 3.717353928356176*^9}, 
   3.7173594052295322`*^9, 3.717360053480288*^9, 3.7173603181593113`*^9, 
   3.717362065628014*^9, 3.717363426627067*^9, 3.717363457696135*^9, 
   3.717363585591077*^9, 3.717369153582617*^9, 3.717369197242285*^9, 
   3.71736979491501*^9, 3.717369880628954*^9, 3.717370010692453*^9, 
   3.7173706291051702`*^9, 3.717411243887266*^9, 3.717411386859383*^9, 
   3.717411549299501*^9, 3.7174126048805923`*^9, 3.717413441351274*^9, {
   3.7174143170705557`*^9, 3.717414359259055*^9}, 3.7174413278010674`*^9, 
   3.718416342343926*^9, 3.718416487366913*^9, 3.718416608774687*^9, 
   3.718416724456189*^9, 3.718416792613018*^9, 3.718416914994404*^9, 
   3.718417194352662*^9, 3.718417263067762*^9, 3.718417303901966*^9, 
   3.718417433105538*^9, 3.718417543178402*^9, 3.718418667612465*^9, 
   3.718418700967227*^9, 3.7184187338974333`*^9, 3.718418805159855*^9, 
   3.7184195010733232`*^9, 3.718419572656487*^9, 3.718419685138093*^9, 
   3.718420098892468*^9, 3.718420331559869*^9, {3.7184495299238977`*^9, 
   3.718449548893093*^9}, 3.718449589444251*^9, 3.718717114491414*^9, 
   3.719066343549474*^9, {3.719347424879073*^9, 3.719347431435019*^9}, 
   3.7193474830813*^9, 3.719921514067039*^9, 3.719921823720265*^9, 
   3.719922215629125*^9, 3.719923564263853*^9, 3.719923602942594*^9, 
   3.719923640139331*^9, 3.7199237114785223`*^9, 3.719923850078436*^9, 
   3.7199239527458963`*^9, 3.7199241608068132`*^9, 3.720101954998666*^9, 
   3.720102039254959*^9, 3.721932883566907*^9, 3.7220733127770433`*^9, 
   3.7220750021801033`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"calculate", " ", "iob", " ", "curves"}], " ", "-", " ", 
     RowBox[{
     "Method", " ", "from", " ", "Glucose", " ", "clamp", " ", "algorithms", 
      " ", "and", " ", "insulin", " ", "time"}], "-", 
     RowBox[{"action", " ", "profiles"}], " ", "-", " ", 
     RowBox[{"Bequette", " ", "\[IndentingNewLine]", 
      RowBox[{"https", ":"}]}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "ncbi", ".", "nlm", ".", "nih", ".", "gov"}], "/", 
      "pubmed"}], "/", "20144413"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"iob", " ", 
     RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
    RowBox[{"1", "-", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "integral", " ", "of", " ", "GIR", " ", "from", " ", "0", " ", "to", 
        " ", "t"}], ")"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"total", " ", "GIR", " ", "AUC"}], ")"}]}]}]}], "*)"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.717367573329812*^9, 3.7173677317488203`*^9}, {
  3.717413873705391*^9, 3.717413874422117*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"novoiob", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"NIntegrate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"novosmooth", "[", "s", "]"}], "/", "aucn"}], ",", 
                RowBox[{"{", 
                 RowBox[{"s", ",", "0", ",", "t"}], "}"}]}], "]"}]}], ")"}], 
            "*", "100"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{
            RowBox[{"novolog", "[", 
             RowBox[{"[", 
              RowBox[{"Length", "[", "novolog", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fiaspiob", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"NIntegrate", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"fiaspsmooth", "[", "s", "]"}], "/", "aucf"}], ",", 
                RowBox[{"{", 
                 RowBox[{"s", ",", "0", ",", "t"}], "}"}]}], "]"}]}], ")"}], 
            "*", "100"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{
            RowBox[{"fiasp", "[", 
             RowBox[{"[", 
              RowBox[{"Length", "[", "fiasp", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.717255566907138*^9, 3.717255732974703*^9}, {
   3.717255931154516*^9, 3.717255979900169*^9}, {3.717256010926591*^9, 
   3.717256014828744*^9}, {3.7172560560964518`*^9, 3.717256062087237*^9}, 
   3.717257268296482*^9, {3.7172573037509527`*^9, 3.7172573207106047`*^9}, {
   3.717257426493391*^9, 3.717257445221108*^9}, {3.717350078721642*^9, 
   3.71735009566324*^9}, {3.717350214601202*^9, 3.71735021862919*^9}, {
   3.717350251897187*^9, 3.717350255806238*^9}, {3.717352717145627*^9, 
   3.7173527180891027`*^9}, {3.7173538986479607`*^9, 3.717353924481084*^9}, {
   3.718416717672625*^9, 3.7184167201662397`*^9}, {3.7184167832899227`*^9, 
   3.718416786933288*^9}, {3.7184175355714808`*^9, 3.718417539626259*^9}, {
   3.718419607491028*^9, 3.718419612248336*^9}, {3.7184203254898243`*^9, 
   3.7184203282117558`*^9}, {3.7184495708174753`*^9, 3.718449570824247*^9}, {
   3.719921281203673*^9, 3.719921338640966*^9}, {3.719921400149116*^9, 
   3.71992142094044*^9}, {3.719921455206697*^9, 3.7199214893702497`*^9}, {
   3.719923824075165*^9, 3.719923845633814*^9}, {3.720101946149583*^9, 
   3.7201019492781982`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "plot", " ", "iob", " ", "curves", " ", "and", " ", "more", " ", 
    "importantly", " ", "derivatives"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"novoiob", "[", "t", "]"}], ",", 
       RowBox[{"fiaspiob", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<IOB Curves From Raw Data\>\""}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"novoiob", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"fiaspiob", "'"}], "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<dIOB/dt Curves From Raw Data\>\""}]}], 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.717255888701419*^9, 3.7172558923589687`*^9}, {
   3.717255935849946*^9, 3.717255936335601*^9}, {3.717256171241639*^9, 
   3.7172561713837757`*^9}, {3.717256316567238*^9, 3.71725641916171*^9}, {
   3.7172564835314503`*^9, 3.717256518782484*^9}, {3.7172573473212423`*^9, 
   3.717257403981565*^9}, 3.717257496870606*^9, {3.7173500052748632`*^9, 
   3.7173500118180103`*^9}, {3.717350269288509*^9, 3.717350276719453*^9}, 
   3.7173512432991743`*^9, 3.7173527114985657`*^9, {3.717369098672576*^9, 
   3.717369126943342*^9}, {3.7173700686046543`*^9, 3.717370071822609*^9}, {
   3.717413898272561*^9, 3.7174139458156776`*^9}, {3.718416665862843*^9, 
   3.718416676492384*^9}, {3.7184196192831583`*^9, 3.718419623735733*^9}, {
   3.71844957084365*^9, 3.718449570850469*^9}, {3.719349075763583*^9, 
   3.7193490857971582`*^9}, {3.719923154312585*^9, 3.719923184760065*^9}, {
   3.719923903883294*^9, 3.71992390712066*^9}, {3.71992409401501*^9, 
   3.7199240972700253`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
tbweQ0J6V0qxQYatyf8AHgi5ZQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
dozPHqHzsBSzDvU3M/of+cjUkw==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"IOB Curves From Raw Data\"", TraditionalForm], 
     PlotRange -> {{0, 360}, {0., 99.99999995624141}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"novoiob", "(", "t", ")"}], 
       RowBox[{"fiaspiob", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.718416616889517*^9, 3.71841667090343*^9, 3.718416815072892*^9, 
   3.718416937412483*^9, 3.718417239656086*^9, 3.7184173394486513`*^9, 
   3.7184174701953983`*^9, 3.7184176339288177`*^9, 3.718418893584402*^9, {
   3.718419563658758*^9, 3.718419586817725*^9}, 3.718419710137347*^9, 
   3.7184201235309467`*^9, 3.7184203803003693`*^9, 3.718449627201681*^9, 
   3.718717152202536*^9, 3.719066391681522*^9, 3.719347469860602*^9, 
   3.719347522031744*^9, 3.719921860669271*^9, 3.719922251508932*^9, 
   3.719923190614296*^9, 3.719923600955915*^9, 3.7199236782857723`*^9, 
   3.719923749000062*^9, {3.719923893537388*^9, 3.719923910312992*^9}, 
   3.7199240044041*^9, 3.719924211927018*^9, 3.720101981700626*^9, 
   3.7201020668616457`*^9, 3.7219329087915773`*^9, 3.7220733386344233`*^9, 
   3.722075028005166*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
DqjtdoP3NB+aXQ6C/w/baLNe
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fakW4Z5933Zfp5wlAq890Ds+10amNk1M8NDCJsbzOZkMMHcnzRnptXDcV65P
uuwwy6TEgdO8MC2j0a6oLfCCoOfG57vgZ5kBHfuUYE/JK7FtKrB8Qdx+C+Is
IbSom1st3r5yv0yl+6EJO6o/ukizHx42qB7jOwz3WA+361nA7T4sL7ydYKMw
YdkYD7ghVj7rvi8cya1qIRd4lrB4ZSEVatdO6t7S5SODYVrRQ2364XB1tknU
h0i4lAz0pLsJF3zIMpe/D2/rL23Znw9njTXoWD+Bbdw+UH4+g0Xmest8KuA+
/+/u9JVnicq1633vWLWTt2h/ScXVwE71WfaTLTBxzSTTqB+WcCpWp4zA7EYs
vY8mYXr18rzwaXhB5qzv6Tl4QoRzv8IiPMhRzctKZU8Icb36tZOznQxPkYhu
3ARLisbSXlOFBTeotlpr2BOBzx/cXVvXSnLQjd7eowMz/kl05tCH/w5pqY0e
gAfr07qSj8KNObMX9U/BaU65xQ8cYGdZi5+MvrCN6LoXfQHwyQ1l154F2xME
2/hUXVgLaUhnZxoTDmv84ZA8exWW/Oj4ivs/mKPslc2rZHjQ71K6eA5cor6z
M7QUjspjfrz/OXyGd+Tq+qqV+ck45TMk0EKqhL6y6aiFN0xm7r1VD9fUn/65
9R3smsF3u7gDfncwhrZhCJZapjs7MA3Tnx8gHszB3R8qeS8swsUaaVPyVOeI
So+YQY61reS1/Etv52nhPWG7/cKY4ZFTk1LsG+B96+ziJETh+xVd04Qs7L+1
rIl+N3wsPvF+gxIsRfEIjNsL0zscPnlC/RxhkdB+NrixlXyiuW7t4D7Yhr++
4oIRXP1mr1D4aVjI53FwmhPcfMhpl6Qn7C8h8e2JH3wsgb7yUtA5Qoi8Gn0l
pZXcQTWYpB4K0zpWuTBcgbs+puk3XoOVIzbkD6bASQqR6//mwGUb5Brpiv5p
P/k5grUUdrQosI2vgJeaQrR4K88RGVdVZZOLVr6fvSdF0mrgTbk7KKKvYCvb
AK/d7XCW0PtxvQF4pFPE9tQkvCPBvdt5GX5Bo1c+TX2eENpVurvE6j1p6Lrx
pg893Ns36bm8BnY++NI4ZB0ct/0CW9QGuHgNT0MiPzxbY6/5UALe419e9kIB
bvgRnaS5BzYztfGsV4XHXisaH9A4T1TOCVVHhr8j/RXXybZowxmcJWOfDeDq
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
me3UjpH93oPqO53h3S37Z5cD4P8BQiE8Ig==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"dIOB/dt Curves From Raw Data\"", TraditionalForm], 
     PlotRange -> {{0, 360}, {-0.5775637070182462, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SuperscriptBox["novoiob", "\[Prime]", MultilineFunction -> None], 
         "(", "t", ")"}], 
       RowBox[{
         SuperscriptBox["fiaspiob", "\[Prime]", MultilineFunction -> None], 
         "(", "t", ")"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.718416616889517*^9, 3.71841667090343*^9, 3.718416815072892*^9, 
   3.718416937412483*^9, 3.718417239656086*^9, 3.7184173394486513`*^9, 
   3.7184174701953983`*^9, 3.7184176339288177`*^9, 3.718418893584402*^9, {
   3.718419563658758*^9, 3.718419586817725*^9}, 3.718419710137347*^9, 
   3.7184201235309467`*^9, 3.7184203803003693`*^9, 3.718449627201681*^9, 
   3.718717152202536*^9, 3.719066391681522*^9, 3.719347469860602*^9, 
   3.719347522031744*^9, 3.719921860669271*^9, 3.719922251508932*^9, 
   3.719923190614296*^9, 3.719923600955915*^9, 3.7199236782857723`*^9, 
   3.719923749000062*^9, {3.719923893537388*^9, 3.719923910312992*^9}, 
   3.7199240044041*^9, 3.719924211927018*^9, 3.720101981700626*^9, 
   3.7201020668616457`*^9, 3.7219329087915773`*^9, 3.7220733386344233`*^9, 
   3.722075028150251*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"IOB", " ", "Curves"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "also", " ", "calculated", " ", "the", " ", "close", " ", "form", " ", 
    "derivative", " ", "this", " ", "is", " ", "important", " ", "for", " ", 
    "all", " ", "loop", " ", "programs"}], " ", "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"NOTE", " ", "Mathematica", " ", "uses", " ", 
      RowBox[{"E", "^", 
       RowBox[{"(", "a", ")"}]}]}], " ", "-", " ", 
     RowBox[{
     "this", " ", "is", " ", "the", " ", "exponential", " ", "constant", " ", 
      "e", 
      RowBox[{"(", 
       RowBox[{"base", " ", "of", " ", "natural", " ", "logarithms"}], 
       ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"with", " ", "numerical", " ", "value", " ", "2.71"}], "..."}], 
     ".", " ", "."}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"**", 
    RowBox[{"*", " ", "Define", " ", "IOB", " ", "Curves"}]}], " ", "****)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"loopiob", "[", 
     RowBox[{"peakActivityTime_", ",", "actionDuration_", ",", "t_"}], "]"}], 
    ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tau", "=", 
       RowBox[{"peakActivityTime", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"peakActivityTime", "/", "actionDuration"}]}], ")"}], "/", 
         
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", "*", 
            RowBox[{"peakActivityTime", "/", "actionDuration"}]}]}], 
          ")"}]}]}]}], ";", 
      RowBox[{"a", "=", 
       RowBox[{"2", "*", 
        RowBox[{"tau", "/", "actionDuration"}]}]}], ";", 
      RowBox[{"S", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "a"}], ")"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "actionDuration"}], "/", "tau"}], "]"}]}]}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"1", "-", 
       RowBox[{"S", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "a"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"t", "*", 
              RowBox[{"t", "/", 
               RowBox[{"(", 
                RowBox[{"tau", "*", "actionDuration", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "a"}], ")"}]}], ")"}]}]}], "-", 
             RowBox[{"t", "/", "tau"}], "-", "1"}], ")"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "t"}], "/", "tau"}], "]"}]}], "+", "1"}], 
         ")"}]}]}]}], ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dloopiobdt", "[", 
     RowBox[{"peakActivityTime_", ",", "actionDuration_", ",", "t_"}], "]"}], 
    ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"tau", "=", 
       RowBox[{"peakActivityTime", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"peakActivityTime", "/", "actionDuration"}]}], ")"}], "/", 
         
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", "*", 
            RowBox[{"peakActivityTime", "/", "actionDuration"}]}]}], 
          ")"}]}]}]}], ";", 
      RowBox[{"a", "=", 
       RowBox[{"2", "*", 
        RowBox[{"tau", "/", "actionDuration"}]}]}], ";", 
      RowBox[{"S", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "a", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "a"}], ")"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "actionDuration"}], "/", "tau"}], "]"}]}]}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", "a"}], ")"}]}], ")"}], "*", "S", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"1", "/", "tau"}], ")"}]}], " ", "+", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "t"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", " ", "-", " ", "a"}], ")"}], "*", 
               "actionDuration", "*", "tau"}], ")"}]}]}], ")"}], "/", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{"t", "/", "tau"}], ")"}]}]}], " ", "-", " ", "\n", "   ", 
         
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], " ", "-", " ", 
            RowBox[{"t", "/", "tau"}], " ", "+", " ", 
            RowBox[{
             RowBox[{"t", "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", " ", "-", " ", "a"}], ")"}], "*", 
               "actionDuration", "*", "tau"}], ")"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"E", "^", 
             RowBox[{"(", 
              RowBox[{"t", "/", "tau"}], ")"}]}], "*", "tau"}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "define", " ", "the", " ", "default", " ", "curves", " ", "in", " ", 
     "Loop", " ", 
     RowBox[{"(", 
      RowBox[{"maybe", " ", "OPENAPS", " ", 
       RowBox[{"too", "?"}]}], ")"}], " ", "as", " ", "I", " ", 
     "understand"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"loopiobfiasp", "[", "t_", "]"}], ":=", 
    RowBox[{"loopiob", "[", 
     RowBox[{"55", ",", 
      RowBox[{"6", "*", "60"}], ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"loopiobnovo", "[", "t_", "]"}], ":=", 
    RowBox[{"loopiob", "[", 
     RowBox[{"75", ",", 
      RowBox[{"6", "*", "60"}], ",", "t"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"MDT", " ", "curves", " ", "from", " ", "old", " ", "days"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"mdtiob4hr", "[", 
      RowBox[{"g_", ",", "gs_"}], "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"g", "-", "gs"}], "\[LessEqual]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "3.31*^-8"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "-", "gs"}], ")"}], "^", "4"}]}], "+", 
           RowBox[{"2.53*^-5", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "-", "gs"}], ")"}], "^", "3"}]}], "-", 
           RowBox[{"5.51*^-3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "-", "gs"}], ")"}], "^", "2"}]}], "-", 
           RowBox[{"9.086*^-2", "*", 
            RowBox[{"(", 
             RowBox[{"g", "-", "gs"}], ")"}]}], "+", "99.95"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"g", "-", "gs"}], ")"}], " ", ">", " ", "0"}], " ", "&&",
            " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"g", " ", "-", "gs"}], ")"}], "<=", " ", "240"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "-", "gs"}], ")"}], ">", "240"}]}], "}"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"mdtiob5hr", "[", 
      RowBox[{"g_", ",", "gs_"}], "]"}], ":=", 
     RowBox[{"Piecewise", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"g", "-", "gs"}], "\[LessEqual]", "0"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "2.95*^-8"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "-", "gs"}], ")"}], "^", "4"}]}], "+", 
           RowBox[{"2.32*^-5", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "-", "gs"}], ")"}], "^", "3"}]}], "-", 
           RowBox[{"5.55*^-3", "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"g", "-", "gs"}], ")"}], "^", "2"}]}], "+", 
           RowBox[{"4.49*^-2", "*", 
            RowBox[{"(", 
             RowBox[{"g", "-", "gs"}], ")"}]}], "+", "99.3"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"g", "-", "gs"}], ")"}], " ", ">", " ", "0"}], " ", "&&",
            " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"g", " ", "-", "gs"}], ")"}], "<=", " ", "300"}]}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g", "-", "gs"}], ")"}], ">", "300"}]}], "}"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7173587488229322`*^9, 3.7173589597602053`*^9}, 
   3.717359026665763*^9, {3.717359071642013*^9, 3.717359097584235*^9}, {
   3.71735934456065*^9, 3.71735937144628*^9}, {3.7173595407818623`*^9, 
   3.717359546574493*^9}, {3.717359808566637*^9, 3.717359893496153*^9}, {
   3.717359927188621*^9, 3.717359927659531*^9}, {3.717359958698741*^9, 
   3.717360046683605*^9}, 3.71736011841709*^9, {3.7173602551140633`*^9, 
   3.717360271999847*^9}, {3.71737019476331*^9, 3.7173702004556627`*^9}, {
   3.717411078020578*^9, 3.717411101288104*^9}, {3.717411136773184*^9, 
   3.717411193805806*^9}, {3.717411793062414*^9, 3.7174119157098913`*^9}, {
   3.717413232934231*^9, 3.7174132587862883`*^9}, 3.717413309546393*^9, {
   3.717413399816505*^9, 3.717413415713399*^9}, {3.722074463136647*^9, 
   3.722074516113296*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", "**", "**", "**"}], "*", "Compare", " ", "Loop", " ", 
      "Default", " ", "Expontential", " ", "Model", " ", "to", " ", "GIR", 
      " ", "Data"}], "**"}], "**"}], "*******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "IOB", " ", "curves", " ", "and", " ", "Their", " ", 
    "Derivatives", " ", 
    RowBox[{"vs", ".", " ", "Time"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"loopiobfiasp", "[", "t", "]"}], "*", "100"}], ",", 
       RowBox[{"fiaspiob", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<IOB Curves FIASP\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"loopiobfiasp", "'"}], "[", "t", "]"}], "*", "100"}], ",", 
       RowBox[{
        RowBox[{"fiaspiob", "'"}], "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<dIOB/dt Curves FIASP\>\""}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"loopiobnovo", "[", "t", "]"}], "*", "100"}], ",", 
       RowBox[{"novoiob", "[", "t", "]"}], ",", 
       RowBox[{"mdtiob5hr", "[", 
        RowBox[{"t", ",", "0"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<IOB Curves Novolog\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"loopiobnovo", "'"}], "[", "t", "]"}], "*", "100"}], ",", 
       RowBox[{
        RowBox[{"novoiob", "'"}], "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<dIOB/dt Curves Novolog\>\""}]}], 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7173590999363413`*^9, 3.7173591897895727`*^9}, {
   3.71735922809744*^9, 3.7173592342098513`*^9}, {3.7173592759667463`*^9, 
   3.7173592794318247`*^9}, {3.7173593818748417`*^9, 3.717359396858288*^9}, {
   3.717359557690578*^9, 3.71735955906251*^9}, {3.7173600681953278`*^9, 
   3.717360085193576*^9}, {3.7173602795836287`*^9, 3.717360301542797*^9}, 
   3.717360355285562*^9, {3.717361799653432*^9, 3.7173619071730633`*^9}, {
   3.717361953767993*^9, 3.717361957310005*^9}, {3.71736209249228*^9, 
   3.717362108263611*^9}, {3.717364196666326*^9, 3.7173642003219748`*^9}, 
   3.717369149128563*^9, {3.717369357579623*^9, 3.717369364340889*^9}, {
   3.7173694125932198`*^9, 3.717369787949901*^9}, {3.717370259867813*^9, 
   3.717370292053281*^9}, {3.717370326974732*^9, 3.71737044912834*^9}, {
   3.717370595343815*^9, 3.7173706577479343`*^9}, {3.717412378615876*^9, 
   3.717412520220413*^9}, {3.717412622801178*^9, 3.717412627474965*^9}, {
   3.7174127175924807`*^9, 3.717412813318296*^9}, {3.717412858689324*^9, 
   3.717413131529447*^9}, 3.717413168815812*^9, {3.717413329099332*^9, 
   3.717413346852455*^9}, {3.71741343819197*^9, 3.7174134384601717`*^9}, {
   3.718419632196907*^9, 3.7184196381358128`*^9}, {3.71844957088314*^9, 
   3.718449570889688*^9}, {3.7190663030768957`*^9, 3.719066329940439*^9}, 
   3.719921576340909*^9, {3.7199216522283173`*^9, 3.719921736162022*^9}, {
   3.71992178062628*^9, 3.719921812755004*^9}, {3.7199222021550293`*^9, 
   3.719922211903277*^9}, {3.719923238879092*^9, 3.7199232392536163`*^9}, {
   3.7199233485165854`*^9, 3.719923348746463*^9}, {3.719924105673601*^9, 
   3.7199241188391867`*^9}, {3.722074339265173*^9, 3.722074377637656*^9}, {
   3.722074481069079*^9, 3.7220744816086893`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
NRfK9f+//wKCkkrG
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
dozPHqHzsBSzDvU3M/of+cjUkw==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"IOB Curves FIASP\"", TraditionalForm], 
     PlotRange -> {{0, 360}, {0., 99.99999999999906}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"loopiobfiasp", "(", "t", ")"}], " ", "100"}], 
       RowBox[{"fiaspiob", "(", "t", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.71735913165836*^9, 3.717359142216591*^9}, {
   3.71735918368373*^9, 3.7173591936090317`*^9}, 3.717359237473721*^9, 
   3.7173592827179403`*^9, {3.71735940072465*^9, 3.717359406270226*^9}, 
   3.717359563411893*^9, 3.7173600543122683`*^9, 3.717360088663867*^9, {
   3.717360307667872*^9, 3.717360319031966*^9}, 3.7173603587495613`*^9, 
   3.717361878953722*^9, 3.717361911325097*^9, 3.7173619617061357`*^9, 
   3.717362066492854*^9, {3.7173620968641768`*^9, 3.717362113035247*^9}, 
   3.717363427514537*^9, 3.717363458576743*^9, 3.7173635865021133`*^9, 
   3.71736420366173*^9, 3.717369154547167*^9, 3.717369198378539*^9, 
   3.717369795847557*^9, 3.717370011778284*^9, 3.717370630839813*^9, 
   3.717410035056465*^9, 3.7174112451862392`*^9, 3.717411388174199*^9, 
   3.71741155057937*^9, 3.717412605864998*^9, 3.717413442242393*^9, {
   3.717414318057692*^9, 3.717414360858876*^9}, 3.7174413295222692`*^9, 
   3.7184163505187817`*^9, 3.718416495728273*^9, 3.7184166171299553`*^9, 
   3.718416815421549*^9, 3.71841693770228*^9, 3.718417240022663*^9, 
   3.7184173397339783`*^9, 3.7184174704918737`*^9, 3.7184176345935307`*^9, 
   3.71841889385703*^9, {3.7184195639490423`*^9, 3.718419587104282*^9}, 
   3.718419710537903*^9, 3.7184201238948793`*^9, 3.7184203806323137`*^9, 
   3.718449627540987*^9, 3.718717152624043*^9, 3.719066334739019*^9, 
   3.7190663921166077`*^9, 3.719347470194655*^9, 3.719347522378731*^9, 
   3.719921860981205*^9, 3.719922251772771*^9, 3.719923243431183*^9, 
   3.719923352996621*^9, 3.71992360119783*^9, 3.7199236786007566`*^9, 
   3.719923749296323*^9, 3.7199238938163*^9, 3.719924004660935*^9, 
   3.719924212229245*^9, 3.720101982018124*^9, 3.720102067147053*^9, 
   3.7219329090660467`*^9, 3.7220733388883142`*^9, 3.7220750282791433`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
B3Um2n+OwDamnub5u6YgOHJ8X9wigSfeZd7ILjeFkf1i2cG/COSRXV6peW4K
cvwwcmiJQKOuquaZIVPQBjbltcsEDu8WUlg/YwoPjOXpXaQjz59K/YeNBjZS
nV7//SGwRlXF/ogoDdwl/n21doVAu/iUujAFGpz2aRetJD03/E3y6j4a3Omz
u2bPNoZKlwsmWuxpoIKOAgnsY9jyZa3luA8Nlg6yywhzjKGvvnf5qlAabAgR
D88inftd+t+912jgF9/Jf3nVGOpTo4cO3KOBooqTK9vqMezPHjIKqKCBf4fJ
Fi/SZxb08hMaadA9H6H+krSwRdaGvA4a8K8Za9rBOYaV95YDnw/TYMHeuesE
adu/9j39MzS4rv3Uo5L0zIFqnSU2Ovj3dkUukE56KJSzmY8Oh72DFZXXjOEu
TuZqZTE6PNlwhOlGutmx05uhSIes2QMuSaQ9y1Xeeu2nQwkIzpWQXrUuVTma
QQcbWbr2O9I5btPpWQ50eDhQoDlCWveJ2VK1Lx3yK/t+fif9SaDQuSuUDtzc
0RELpEN8eZ5/j6ODtYlW90/Smxu85dZl0GGKI41zmnSpcFO83H068IzLbhok
bRkg892gkg63X4avfU16qjna1vkFHULShaYKSV8SH64K7aTDWmboyzjS/4TA
jvQROsRWbct0Iv2iNSuq+AcdSgf8QnaRdpX7w3rDzoDZ3JEjP8jzWIlwoI3x
MUBiedC+lPTN7uoiDnEGRAi98j9Geq/iVkFRJQZkHFvM+/9598QwT2vrMkCl
7AXPK/I+gvs6P9maMUB2NirzBGkBdVXwd2QANSLEm5c0Y3Sa+34YA1ycZRpV
yPv+omN+ouEiAy6yH3SrJevhwpXC930ZDPh7pcJOj/QzA5/rmx4z4J56laMy
WU/O15v+Kr1kQP7NvPAcst6WZ2Tc6F0MUMp3XbeWtMat4V3nZhkQK5ma/fIv
gZ2LkJLJYQYXvGWLt5MOsMyeq+I3gymBJnNfsr4LVxyeTiuZwfkCJeu53wRK
OHeZOx03gwa+ZLVasp9y6zc2BYeZQYJIUerUAjn/pGh6CXFmYH1/fbQw6d3j
dUpPcs2glf2Z1tF5AjUC8/iE+8yAyRF6qZjs3+rO4bg9E2ag/1lL+vF3Avdp
7mCn/jID4RT1iCqy3/WXU2eYm81h0vZaXMEUgYwL4e2dZuYgr7WUaPOFnIfj
FbRJB3Pg6Kqp3zNOoBX9e8MqX3MIaS7v5ybnyUE+jzKVC+awfnPczANy/hy9
bp6WUmcOx65orykeIJBZJHGQoWQBAfJR4W2dBC7yOb5z228BzUHdXc4dBIYH
XTUOp1uAR2qg3/h7sv+1eDXzvSzARP+p39Q7AuMb5oS4cyygM+qMFpLz1XJi
ZPIotyU8WxNAv/CEQI+VyqIdoZbQExwb05hJ4Cau7WnPIi2BIancnHGDzJMN
Z0M94ixhd1GhvPd/BIqLmlAeXrOEo0kZLotpBH7e19O7r9ISShVL9QfIPLEO
W1jtOGsJL1x7P78h80d3XtPh+gkrYOObHjKxIHBq+QbonrICk4kGrngGgTdX
s8kOn7GCycORK6/IvPsl2PxdPsEKZp5MhOpQCCxXOXShOt8KXLYtKUxpEbjT
P6Tkw5gVJEV4iqdIECg0UcUl5GoNgauVaxamyTxf5FnQ8rGGlt6JxflJFtpz
OhH2/tZw2C1KbOYLC2+Ksb/IirCGfTebVftHWChpa3pO9oY17AmeGb3Sw0LF
p73L6p3WsJgr+My/joXGyUsztsY2oH637yzPJRYGq+77fHmnLUzpi9yKESbf
L1PLzYJfDwAv/MRQ6VF8aBDEld1qB8wzg3kebCOYO+f7rDDtMLi9PycyPziE
i/pb3zaedYArAQWVHbcGsY9t1czQUScQ8M3oTmrtRz+RkylRUkfgXNTp7OXE
z1jk01yfHuMCgwIpfs67P2LYrPDCLp+jMGo2kRPP/QHnacYHm464wm/3x9n2
7V2o7ZCqz7Jyg4C8oFfSLzqwXTjTt1HVHWquRxXsWnyP2+5F1+b94wHnc4VS
P0i3YdXgTob5ek8ISr7uRBd9i6Kd372YU54QbpEQlq7zGlXTUwvvDHpBolxs
tPKhJsxcPat4+bk3lAdyMr36G7FSX+ljTLUP9O+OUhTwbcAMzUv8y/m+YFYu
q35Sux5bP929oJpwDBYfuiUUPKnFCrOb0v6Rx0HMN+HDwKZqnDlhw+bnfgJq
twk852GvxHljee9vhn5wZ+byrzTjMsyb6l0M0jgJurOaiZTMYjx0666b0zp/
uPJgZWNbUyGWldKPrIr1h9L0bL0/oXmovb3918Vf/vCskZCUH8tFqUGvj+99
AoC6P3ahu+kWjvIes7g5EgBxF8cTolIysS3J3M3kQCAcaDT5oncrA9NCsnlP
tQXC47XXTopNX8HaupVfbqZB4ArX0tq6knGjI8Sq1gRBZNZFW3f6RdR2+ZYX
oxYM4yK5VQqS0Zj05IxP1b1gcHVxyXCwPYMmQdv8C7ecgpTzItqKRBD2pMrw
SqWcguX1MvwfxLzxMhe/URg7EwSj7jX0Otth7Y8+h+BVTHhs8aA9Y/EgjvXl
B/pxMmG415h6+/JB3FdOyXFdywRdPduXV5oOIOES8pvGzwRJ8wicVLNFnZqB
ku0STBD7U3/MdocVjh4vEn0KTHjz1zb9g4kxbjgUrv7YgAmeKemXDicaobYh
lVFCYcL8aqUCjw4KJgkPh96lMsFvh4ih6FFD1Hq5uSvRkgnekW/vckcDJor9
G+/swoQYP8FnHM/UsYqHdvuQKxPM6z2Z0k5qODy/pdranQkFweZGNksqqNVS
TBh7M+Eiun7p0tyDwyGj+kr+TBD1vN5dFyGD69xLDskHkvuTdN1a3iSJmhYR
J6WCmZAh7xFZIyCOCTJbM4VCmGBqI58w6bQZK/lYZfxh5Po9P1qs2fhw6HfJ
a94zTDicLfE614wT141FDHFGMOE6T5tnrtF8nUY7fXHlLBN0kiOc15Rsqvsf
xG1IeQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
fakW4Z5933Zfp5wlAq890Ds+10amNk1M8NDCJsbzOZkMMHcnzRnptXDcV65P
uuwwy6TEgdO8MC2j0a6oLfCCoOfG57vgZ5kBHfuUYE/JK7FtKrB8Qdx+C+Is
IbSom1st3r5yv0yl+6EJO6o/ukizHx42qB7jOwz3WA+361nA7T4sL7ydYKMw
YdkYD7ghVj7rvi8cya1qIRd4lrB4ZSEVatdO6t7S5SODYVrRQ2364XB1tknU
h0i4lAz0pLsJF3zIMpe/D2/rL23Znw9njTXoWD+Bbdw+UH4+g0Xmest8KuA+
/+/u9JVnicq1633vWLWTt2h/ScXVwE71WfaTLTBxzSTTqB+WcCpWp4zA7EYs
vY8mYXr18rzwaXhB5qzv6Tl4QoRzv8IiPMhRzctKZU8Icb36tZOznQxPkYhu
3ARLisbSXlOFBTeotlpr2BOBzx/cXVvXSnLQjd7eowMz/kl05tCH/w5pqY0e
gAfr07qSj8KNObMX9U/BaU65xQ8cYGdZi5+MvrCN6LoXfQHwyQ1l154F2xME
2/hUXVgLaUhnZxoTDmv84ZA8exWW/Oj4ivs/mKPslc2rZHjQ71K6eA5cor6z
M7QUjspjfrz/OXyGd+Tq+qqV+ck45TMk0EKqhL6y6aiFN0xm7r1VD9fUn/65
9R3smsF3u7gDfncwhrZhCJZapjs7MA3Tnx8gHszB3R8qeS8swsUaaVPyVOeI
So+YQY61reS1/Etv52nhPWG7/cKY4ZFTk1LsG+B96+ziJETh+xVd04Qs7L+1
rIl+N3wsPvF+gxIsRfEIjNsL0zscPnlC/RxhkdB+NrixlXyiuW7t4D7Yhr++
4oIRXP1mr1D4aVjI53FwmhPcfMhpl6Qn7C8h8e2JH3wsgb7yUtA5Qoi8Gn0l
pZXcQTWYpB4K0zpWuTBcgbs+puk3XoOVIzbkD6bASQqR6//mwGUb5Brpiv5p
P/k5grUUdrQosI2vgJeaQrR4K88RGVdVZZOLVr6fvSdF0mrgTbk7KKKvYCvb
AK/d7XCW0PtxvQF4pFPE9tQkvCPBvdt5GX5Bo1c+TX2eENpVurvE6j1p6Lrx
pg893Ns36bm8BnY++NI4ZB0ct/0CW9QGuHgNT0MiPzxbY6/5UALe419e9kIB
bvgRnaS5BzYztfGsV4XHXisaH9A4T1TOCVVHhr8j/RXXybZowxmcJWOfDeDq
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
me3UjpH93oPqO53h3S37Z5cD4P8BQiE8Ig==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"dIOB/dt Curves FIASP\"", TraditionalForm], 
     PlotRange -> {{0, 360}, {-0.7196004362997437, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           SuperscriptBox[
           "loopiobfiasp", "\[Prime]", MultilineFunction -> None], "(", "t", 
           ")"}], " ", "100"}], 
       RowBox[{
         SuperscriptBox["fiaspiob", "\[Prime]", MultilineFunction -> None], 
         "(", "t", ")"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.71735913165836*^9, 3.717359142216591*^9}, {
   3.71735918368373*^9, 3.7173591936090317`*^9}, 3.717359237473721*^9, 
   3.7173592827179403`*^9, {3.71735940072465*^9, 3.717359406270226*^9}, 
   3.717359563411893*^9, 3.7173600543122683`*^9, 3.717360088663867*^9, {
   3.717360307667872*^9, 3.717360319031966*^9}, 3.7173603587495613`*^9, 
   3.717361878953722*^9, 3.717361911325097*^9, 3.7173619617061357`*^9, 
   3.717362066492854*^9, {3.7173620968641768`*^9, 3.717362113035247*^9}, 
   3.717363427514537*^9, 3.717363458576743*^9, 3.7173635865021133`*^9, 
   3.71736420366173*^9, 3.717369154547167*^9, 3.717369198378539*^9, 
   3.717369795847557*^9, 3.717370011778284*^9, 3.717370630839813*^9, 
   3.717410035056465*^9, 3.7174112451862392`*^9, 3.717411388174199*^9, 
   3.71741155057937*^9, 3.717412605864998*^9, 3.717413442242393*^9, {
   3.717414318057692*^9, 3.717414360858876*^9}, 3.7174413295222692`*^9, 
   3.7184163505187817`*^9, 3.718416495728273*^9, 3.7184166171299553`*^9, 
   3.718416815421549*^9, 3.71841693770228*^9, 3.718417240022663*^9, 
   3.7184173397339783`*^9, 3.7184174704918737`*^9, 3.7184176345935307`*^9, 
   3.71841889385703*^9, {3.7184195639490423`*^9, 3.718419587104282*^9}, 
   3.718419710537903*^9, 3.7184201238948793`*^9, 3.7184203806323137`*^9, 
   3.718449627540987*^9, 3.718717152624043*^9, 3.719066334739019*^9, 
   3.7190663921166077`*^9, 3.719347470194655*^9, 3.719347522378731*^9, 
   3.719921860981205*^9, 3.719922251772771*^9, 3.719923243431183*^9, 
   3.719923352996621*^9, 3.71992360119783*^9, 3.7199236786007566`*^9, 
   3.719923749296323*^9, 3.7199238938163*^9, 3.719924004660935*^9, 
   3.719924212229245*^9, 3.720101982018124*^9, 3.720102067147053*^9, 
   3.7219329090660467`*^9, 3.7220733388883142`*^9, 3.72207502840759*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
cIey1fFJqyUo2qzEPVDC+TLwKlH0iyXEpfR/vbMNn0e7g42Rk5Yw3Fujly5P
wLDsdRMzTiuoon5VockQoNDJrtJmbQXdXuEKP0TxfUxzkuNHrRUI6xWKdLLj
PPpdWidRaQ2Jq+dlfUfcoJ1EuufzbMH+bvY94VtucPR9ZkZWuS3MDb8NLLnp
BpwKK+tVdbaQpvBL0e6GG1h+rGiaG7KFLwWWD06lukGVpsZ+L0k7eEFVfXc+
3g1yZ7eeMrhhB2W9Hbs+Ut0gPJizbjZ+F2yK+5UeYOsGMp4fHQ6G2EMnTD5L
nHOFQ+tPi7ecdATjk99LKCauIDJZwS7i6wSSWka21n4uQNM0+pKq7AzXd8Ur
dMU6g+/PlSbBCRfoNKP+GMvcBw/NqOxZbW7wsGFsY3GGE+T+Dn5dlOYOJxar
GzrL9sKyqei7+hgPiLnKnzRZ7gj9DMxzQz4HIc3ZzrjxxB44JnE8+YycF6wW
zZW+qLSH4sNNr67FegOnp9CjkP5dEPFr89L2wz5wR+harcUmO1iws3Jt9PKF
QH7ptKQ1a9D3SDEd2euH52fcgsoGK+jYnBlcr+kPzwZTKpmOWoDYvXPP8xUP
QaiLuv6rCjOoGFTe7cATAFC9J6xBxBQku2YDyZ8BoH5q6qSaBQLNaylFdwcD
4deBDy8dNhlBJssv1dS6IGAcnt9VoKkPT03VemMrD4OLVMVDqUM6kK6bwL9S
GAxpZxnUOD9pQltfXpzmpSOQJi/CfuHdTnhif2tr6OkQsNpf94uzVg3mju5j
OOZ/FGwPceR6RO2ABSuloGnzYzCnLyp6eocS5P/sWabqHAeTGL6/S9wKQNzJ
8zvIHQoS3ZmSNAM5eFy2y4v5QiiEkQefXvKSBn3xjj8X/4RC2c5DfVQtCZAb
DOz9cDgMiJ/Pi3OuisAw15E9t76HgW2KSFYOEoTZm1X/fEfCYP7n8tszOwRh
ZRtnvtJYGGTY9f723iwIghYFDM8mwmCZOdNO6pcAmEWNlX6YC4N8UnYx454A
ZE35CbEzUEDwzfWmNB4B2P/uQE+YBAXcFHQtqD18EOBRFKsnSYGgHXPbdzbw
AeXHv53rUhQI13ggOFPGBxdZMxIuyVGgJJHnr1EyH1QY9xjeV6aAXbf/2V47
PthU7HL7ix4FeL8rKGw/vRHakxz8rF0oUPeG8aMRjQdOdMxs1nKjwBXHyBf0
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Xg==
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQvWijncm1g0UODFDAPN+M988hBH/Vo+uHXxxB8H9k
ShkeOoHgT6mYz116AcFf8zPieMQlBP9olVCzzRUE/1tN6y/mGwh+ZGP2y0n3
EXy5LvPjG94h+Ctmn296w1MM5+/Z9/9nsieCzx/j0G68C8G3THi3otWkBM7v
212TuWMZgu9eLFWwRqwUzr8+UZVbeQKCP4ld0LWKsQxh36e70SXMCP7zu6uK
8lgRfJstLguSOBH8ZwkVv70EEXzrXfc3Sisi+E9y1sntdUDw+SKqTbc7IfiW
zh4+G10Q/D7JR5VLPRB8i2OiV3sDEPxe+druuAQEfweX16KIJAT/0VexnUEp
SPrPbHjmloEkX/HEUb8AwedJ2RihWYTgm/vX5SuXIPg9qhJzxSsQ/G0CTzcL
ViH4D39vPMVdg2Te87qHrHUIvtkl7x//6xF8AIL7lEM=
         
         "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"IOB Curves Novolog\"", TraditionalForm], 
     PlotRange -> {{0, 360}, {0., 99.99999999999946}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"loopiobnovo", "(", "t", ")"}], " ", "100"}], 
       RowBox[{"novoiob", "(", "t", ")"}], 
       RowBox[{"mdtiob5hr", "(", 
         RowBox[{"t", ",", "0"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.71735913165836*^9, 3.717359142216591*^9}, {
   3.71735918368373*^9, 3.7173591936090317`*^9}, 3.717359237473721*^9, 
   3.7173592827179403`*^9, {3.71735940072465*^9, 3.717359406270226*^9}, 
   3.717359563411893*^9, 3.7173600543122683`*^9, 3.717360088663867*^9, {
   3.717360307667872*^9, 3.717360319031966*^9}, 3.7173603587495613`*^9, 
   3.717361878953722*^9, 3.717361911325097*^9, 3.7173619617061357`*^9, 
   3.717362066492854*^9, {3.7173620968641768`*^9, 3.717362113035247*^9}, 
   3.717363427514537*^9, 3.717363458576743*^9, 3.7173635865021133`*^9, 
   3.71736420366173*^9, 3.717369154547167*^9, 3.717369198378539*^9, 
   3.717369795847557*^9, 3.717370011778284*^9, 3.717370630839813*^9, 
   3.717410035056465*^9, 3.7174112451862392`*^9, 3.717411388174199*^9, 
   3.71741155057937*^9, 3.717412605864998*^9, 3.717413442242393*^9, {
   3.717414318057692*^9, 3.717414360858876*^9}, 3.7174413295222692`*^9, 
   3.7184163505187817`*^9, 3.718416495728273*^9, 3.7184166171299553`*^9, 
   3.718416815421549*^9, 3.71841693770228*^9, 3.718417240022663*^9, 
   3.7184173397339783`*^9, 3.7184174704918737`*^9, 3.7184176345935307`*^9, 
   3.71841889385703*^9, {3.7184195639490423`*^9, 3.718419587104282*^9}, 
   3.718419710537903*^9, 3.7184201238948793`*^9, 3.7184203806323137`*^9, 
   3.718449627540987*^9, 3.718717152624043*^9, 3.719066334739019*^9, 
   3.7190663921166077`*^9, 3.719347470194655*^9, 3.719347522378731*^9, 
   3.719921860981205*^9, 3.719922251772771*^9, 3.719923243431183*^9, 
   3.719923352996621*^9, 3.71992360119783*^9, 3.7199236786007566`*^9, 
   3.719923749296323*^9, 3.7199238938163*^9, 3.719924004660935*^9, 
   3.719924212229245*^9, 3.720101982018124*^9, 3.720102067147053*^9, 
   3.7219329090660467`*^9, 3.7220733388883142`*^9, 3.722075028522492*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwV1nk4VV0XAHAlEgpJiMiQXkWKEhELNzLfwRSSUKSQ6SKi8oZEqWgiJIoy
pEGSLKQMmTIkme45xjeSBknId76/zvN79nn22Xudtdbecm5+zMNLubi4FJZw
cf3/6d+8ddPz1n49Rjdb3ro9ukJvMnunG61c/77gooqSshtyMjSTFWmN+i5W
HYmx8gFYHBr1mofWqx/g6eSYIHYW1w0rOP0ymtCvVFvFaZq7jFZSv+5NGs3r
b8qdGqutu4NemgONn40EoSxT46eLRzFOv24fGDOShsX/JiU+3qnE1RaCwuEV
0rDG5NXro4OVuK2DBiu110PJpoLZN4pV6D30LHP7VhlYt+xTZP+9KjyxtHHb
HsENwD6VpX41txqH5Qu/nfslB5u38GtszKrBFveAQPF3G2Gl+SmLUt86zB7+
w94dpAprvb6Ztge24D7b2P7AAlXQrZmt8cxpwYkaUeOCEVXocbnX1P6hBXdk
q4ht2L8VdFj6fjelW7HGzeUJj54amLxZVrA8shW/f+WEjEVvA5W5Fp3Ne96j
qA/t6RNLdWjOP33vfX4b2ngKqJoROyHOU1j3M6sT9dm26vYLO6HNbKL3qmcn
bj6XsctDUhPS059Hq4R3ItddDcNIhiZI+Mcs35LViQX9TvaPqzSh9y/PyIGv
nchrl39mXdYuqHSlE1kxH7CUZvnhs5s2NF7vXTOW24V3Wdd7ZiK1Qfwy2RBd
1oUX3QjOslRtuPbzbJZQYxd6nA4el2nXhj4mV/fMZBeKlN/mYhnthvbDq1kC
Oz6it8bk5pcKOpDstn5q78uPKCV/KerCkC7MCao9oFV0Y3n8T+XZpXtgQU/o
yb6WbnT+sb/jiNwe6PEUsdDhdGN6jaKyocseeBCzxGFiySeU9yxr+921B0xv
rZ+NpH3CzfnDG4+804M1Vaud/d5+wvVSMkc27AdQvFMW8fpVD/q20HXsvQD+
lpSaFDT2YEV0tPDFEADVjFPDMT096DIxVjaXAkCz8qxcMduDma+eCHW1AZRe
n+e21uhFRVfTF4kWBiBVdmkHJ7sXVXKCBOf0DeGM52DnwYg+dPOInla1MgRa
0u3YsLg+vKFwpd/V2RBmjolsjknuQ+6sokdvQw1BrG/eJTS/Dz+lf7a5UmwI
7bmLDlU9fXj+huttZQUjUJOy557Y1Y8jFyy2OvDSoJ3TvKVrpB+lzZ3EL6yh
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
7O/VqNlm/nsxig1vFdXu/2SrV/wPxHYiEg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
DqjtdoP3NB+aXQ6C/w/baLNe
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"dIOB/dt Curves Novolog\"", TraditionalForm], 
     PlotRange -> {{0, 360}, {-0.5713515612013748, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           SuperscriptBox[
           "loopiobnovo", "\[Prime]", MultilineFunction -> None], "(", "t", 
           ")"}], " ", "100"}], 
       RowBox[{
         SuperscriptBox["novoiob", "\[Prime]", MultilineFunction -> None], 
         "(", "t", ")"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.71735913165836*^9, 3.717359142216591*^9}, {
   3.71735918368373*^9, 3.7173591936090317`*^9}, 3.717359237473721*^9, 
   3.7173592827179403`*^9, {3.71735940072465*^9, 3.717359406270226*^9}, 
   3.717359563411893*^9, 3.7173600543122683`*^9, 3.717360088663867*^9, {
   3.717360307667872*^9, 3.717360319031966*^9}, 3.7173603587495613`*^9, 
   3.717361878953722*^9, 3.717361911325097*^9, 3.7173619617061357`*^9, 
   3.717362066492854*^9, {3.7173620968641768`*^9, 3.717362113035247*^9}, 
   3.717363427514537*^9, 3.717363458576743*^9, 3.7173635865021133`*^9, 
   3.71736420366173*^9, 3.717369154547167*^9, 3.717369198378539*^9, 
   3.717369795847557*^9, 3.717370011778284*^9, 3.717370630839813*^9, 
   3.717410035056465*^9, 3.7174112451862392`*^9, 3.717411388174199*^9, 
   3.71741155057937*^9, 3.717412605864998*^9, 3.717413442242393*^9, {
   3.717414318057692*^9, 3.717414360858876*^9}, 3.7174413295222692`*^9, 
   3.7184163505187817`*^9, 3.718416495728273*^9, 3.7184166171299553`*^9, 
   3.718416815421549*^9, 3.71841693770228*^9, 3.718417240022663*^9, 
   3.7184173397339783`*^9, 3.7184174704918737`*^9, 3.7184176345935307`*^9, 
   3.71841889385703*^9, {3.7184195639490423`*^9, 3.718419587104282*^9}, 
   3.718419710537903*^9, 3.7184201238948793`*^9, 3.7184203806323137`*^9, 
   3.718449627540987*^9, 3.718717152624043*^9, 3.719066334739019*^9, 
   3.7190663921166077`*^9, 3.719347470194655*^9, 3.719347522378731*^9, 
   3.719921860981205*^9, 3.719922251772771*^9, 3.719923243431183*^9, 
   3.719923352996621*^9, 3.71992360119783*^9, 3.7199236786007566`*^9, 
   3.719923749296323*^9, 3.7199238938163*^9, 3.719924004660935*^9, 
   3.719924212229245*^9, 3.720101982018124*^9, 3.720102067147053*^9, 
   3.7219329090660467`*^9, 3.7220733388883142`*^9, 3.722075028647683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"couple", " ", "of", " ", "comments"}], "\[IndentingNewLine]", 
     "-", " ", 
     RowBox[{
     "the", " ", "exponential", " ", "curve", " ", "is", " ", "quite", " ", 
      "nice", " ", "but", " ", "it", " ", "missed", " ", "the", " ", 
      "initial", " ", "delay"}], " ", "-", " ", 
     RowBox[{
     "you", " ", "get", " ", "a", " ", "strong", " ", "negative", " ", "bg", 
      " ", "velocity", " ", "from", " ", "minute", " ", "zero"}]}], ",", " ", 
    
    RowBox[{
     RowBox[{"which", " ", "I", " ", "dont", " ", "think", " ", "is", " ", 
      RowBox[{"physical", ".", "\[IndentingNewLine]", 
       RowBox[{"-", " ", "it"}]}], " ", "seems", " ", "agressive", " ", 
      "that", " ", "the", " ", "peak", " ", "would", " ", "be", " ", "at", 
      " ", "55", " ", "min"}], " ", "-", "  ", 
     RowBox[{
     "an", " ", "IOB", " ", "curve", " ", "is", " ", "usually", " ", 
      "calculated", " ", "from", " ", "Pharmacodynamics", " ", 
      RowBox[{"(", 
       RowBox[{"BG", " ", "changes", " ", "due", " ", "to", " ", "insulin"}], 
       ")"}], " ", "not", " ", "PharmacoKinetics", " ", 
      RowBox[{"(", 
       RowBox[{"insulin", " ", "concentration"}], ")"}]}], 
     "\[IndentingNewLine]", "-", " ", 
     RowBox[{
     "From", " ", "Novo", " ", "Nordisks", " ", "FIASP", " ", "data", " ", 
      "the", " ", "peak", " ", "time", " ", "for", " ", "GIR", " ", "was", 
      " ", "124", " ", "min"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "the", " ", "peak", " ", "time", " ", "for", " ", 
      "concentration", " ", "was", " ", "63", " ", 
      RowBox[{"min", ".", "  ", "In"}], " ", "Heise", " ", "et", " ", "all", 
      " ", "with", " ", "a", " ", "pump", " ", "peak", " ", "time", " ", 
      "was", " ", "114", " ", "min", " ", "for", " ", "GIR", " ", "and", " ", 
      "55", " ", "min", " ", "for", " ", 
      RowBox[{"concentration", ".", "   ", "so"}], " ", "this", " ", "curve", 
      " ", "from", " ", "Loop", " ", "with", " ", "a", " ", "peak", " ", "of",
       " ", "55", " ", "min"}], " ", "-", " ", 
     RowBox[{"if", " ", "Im", " ", "understanding", " ", "it", " ", "right"}],
      " ", "-", " ", 
     RowBox[{
     "has", " ", "a", " ", "time", " ", "of", " ", "action", " ", "that", " ",
       "is", " ", "equal", " ", "to", " ", "concentration"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "less", " ", "then", " ", "half", " ", "the", " ", "GIR", 
      " ", "peak", " ", "time", " ", "from", " ", "the", " ", 
      RowBox[{"literature", ".", "  ", "This"}], " ", "seems", " ", "REALLY", 
      " ", "fast"}], "  ", "-", 
     RowBox[{"at", " ", "best", " ", "it", " ", "should", " ", "be", " ", 
      RowBox[{"between", ".", "  ", "It"}], " ", "is", " ", "faster", " ", 
      "then", " ", "Afreeza"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "which", " ", "we", " ", "know", " ", "is", " ", "much", " ", "faster", 
      " ", "then", " ", 
      RowBox[{"FIASP", ".", " ", "\[IndentingNewLine]", 
       RowBox[{"-", " ", "I"}]}], " ", "think", " ", "as", " ", "I", " ", 
      "said", " ", "above", " ", "its", " ", "really", " ", "key", " ", "to", 
      " ", "compare", " ", "the", " ", "derivative", " ", "curves", " ", 
      "for", " ", "speed", " ", "as", " ", "this", " ", "is", " ", "what", 
      " ", "drives", " ", "the", " ", "change", " ", "in", " ", "BG", " ", 
      "minute", " ", "to", " ", "minute", " ", "ie", " ", "BG", " ", 
      "velocity", " ", "is", " ", "proportional", " ", "to", " ", 
      RowBox[{"diob", "/", "dt"}], " ", "in", " ", "all", " ", "of", " ", 
      "our", " ", "simple", " ", "models"}], " ", "\[IndentingNewLine]", "-", 
     " ", 
     RowBox[{
     "the", " ", "Loop", " ", "novolog", " ", "curve", " ", "looks", " ", 
      "even", " ", "more", " ", "extreme", " ", "on", " ", "a", " ", 
      "relative", " ", "basis", " ", "with", " ", "a", " ", "peak", " ", "of",
       " ", "75", " ", "min"}], " ", "-", " ", 
     RowBox[{
     "are", " ", "people", " ", "seeing", " ", "such", " ", "fast", " ", 
      "novolog", " ", 
      RowBox[{"action", " ", "?", " ", "What"}], " ", "changed", " ", "from", 
      " ", "the", " ", "old", " ", "Walsh", " ", 
      RowBox[{"Curves", " ", "?", "  ", "They"}], " ", "result", " ", "in", 
      " ", "almost", " ", "completely", " ", "different", " ", 
      RowBox[{"behavior", ".", "  ", "The"}], " ", "new", " ", 
      "exponrtential", " ", "curves", " ", "are", " ", "incredibly", " ", 
      "fast", " ", "on", " ", "a", " ", "relative", " ", 
      RowBox[{"scale", ".", "  ", "This"}], " ", "would", " ", "say", " ", 
      "that", " ", "the", " ", "bolus", " ", "wizard", " ", "curves", " ", 
      "in", " ", "most", " ", "pumps", " ", "including", " ", "MDT", " ", 
      "are", " ", 
      RowBox[{"wrong", ".", "\[IndentingNewLine]", 
       RowBox[{"-", " ", "on"}]}], " ", "thing", " ", "to", " ", "note"}], 
     " ", "-", " ", 
     RowBox[{
     "the", " ", "function", " ", "form", " ", "that", " ", "has", " ", 
      "been", " ", "chosen", " ", "here", " ", "gives", " ", "an", " ", 
      "\"\<instant\>\"", " ", "BG", " ", "veloctiy", " ", 
      RowBox[{"(", 
       RowBox[{"negative", " ", "of", " ", "course"}], ")"}], " ", "the", " ",
       "moment", " ", "you", " ", "take", " ", 
      RowBox[{"insulin", ".", "  ", "There"}], " ", "is", " ", "no", " ", 
      "delay"}], " ", "-", " ", 
     RowBox[{
     "if", " ", "you", " ", "look", " ", "at", " ", "both", " ", "the", " ", 
      "GIR", " ", "and", " ", "even", " ", "the", " ", "concentration", " ", 
      "data", " ", "there", " ", "is", " ", "a", " ", "delay"}], " ", "-", 
     " ", 
     RowBox[{
     "that", " ", "should", " ", "be", " ", "added", " ", "at", " ", "some", 
      " ", "point"}], " ", "-", " ", 
     RowBox[{"PARTICULARLY", " ", "for", " ", "novolog"}], " ", 
     "\[IndentingNewLine]", "-", " ", 
     RowBox[{
     "I", " ", "realize", " ", "that", " ", "some", " ", "people", " ", "may",
       " ", "feel", " ", "strongly", " ", "that", " ", "the", " ", "IOB", " ",
       "effect", " ", "should", " ", "be", " ", "proportional", " ", "to", 
      " ", "concentration", " ", 
      RowBox[{"(", "PK", ")"}], " ", "rather", " ", "then", " ", "glood", " ",
       "glucose", " ", "action", " ", 
      RowBox[{"(", "PD", ")"}]}], " ", "-", " ", 
     RowBox[{
     "we", " ", "can", " ", "see", " ", "from", " ", "the", " ", "GIR", " ", 
      "data", " ", "it", " ", "is", " ", 
      RowBox[{"not", ".", "  ", "While"}], " ", "there", " ", "is", " ", 
      "confusion", " ", "out", " ", "there", " ", "the", " ", "definition", 
      " ", "of", " ", "IOB", " ", "really", " ", "is", " ", "PD"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{"not", " ", 
      RowBox[{"PK", ".", "   ", "Its"}], " ", "really", " ", "a", " ", 
      "question", " ", "of", " ", "how", " ", "you", " ", "want", " ", "to", 
      " ", "use", " ", 
      RowBox[{"IOB", ".", "  ", "Glucodyn"}], " ", "and", " ", "Bolus", " ", 
      "Wizard", " ", "math", " ", "in", " ", "general", " ", "assumes", " ", 
      "IOB", " ", "is", " ", "action", " ", "on", " ", 
      RowBox[{"BG", ".", "  ", "\[IndentingNewLine]", 
       RowBox[{"-", " ", "I"}]}], " ", "think", " ", "one", " ", "big", " ", 
      "learning", " ", "from", " ", "the", " ", "last", " ", "few", " ", 
      "years", " ", "is", " ", "that", " ", "simply", " ", "fitting", " ", 
      "the", " ", "IOB", " ", "%", " ", "is", " ", "not", " ", "enough"}], 
     " ", "-", " ", 
     RowBox[{
     "one", " ", "MUST", " ", "make", " ", "sure", " ", "the", " ", 
      "derivative", " ", "is", " ", "smooth", " ", "and", " ", 
      RowBox[{"reasonable", ".", "  ", "\[IndentingNewLine]", 
       RowBox[{"-", " ", "The"}]}], " ", "\"\<fixing\>\"", " ", "of", " ", 
      "the", " ", "action", " ", "curve", " ", "as", " ", "we", " ", "are", 
      " ", "doing", " ", "is", " ", "something", " ", "I", " ", "think", " ", 
      "that", " ", "needs", " ", "to", " ", "go", " ", "away", " ", "longer", 
      " ", 
      RowBox[{"term", ".", "  ", "now"}], " ", "that", " ", "we", " ", "have",
       " ", "CGM", " ", "data", " ", "and", " ", "lots", " ", "of", " ", 
      "it"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "we", " ", "should", " ", "be", " ", "creating", " ", "individual", " ", 
      "curves", " ", "for", " ", "people", " ", "based", " ", "on", " ", 
      "real", " ", "insulin", " ", "action"}], " ", "-", " ", 
     RowBox[{
     "yes", " ", "the", " ", "models", " ", "get", " ", "slightly", " ", 
      "more", " ", "complicated", " ", "but", " ", "there", " ", "is", " ", 
      "no", " ", "way", " ", "2", " ", "people", " ", "have", " ", "the", " ",
       "exact", " ", "same", " ", "action", " ", "curves"}], " ", "-", " ", 
     "IMHO", "  ", "-", " ", 
     RowBox[{
     "but", " ", "thats", " ", "for", " ", "ongoing", " ", "research"}]}]}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**"}], "*", "Add", " ", "a", " ", "Shift", " ", "to", " ", 
    "Exponential", " ", "Model", " ", "and", " ", "Fit", " ", 
    RowBox[{"Parameters", " ", "**"}]}], "*****)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fit", " ", "was", " ", "dont", " ", "by", " ", "eye"}], " ", "-",
     " ", 
    RowBox[{
    "can", " ", "do", " ", "it", " ", "via", " ", "optimization", " ", "but", 
     " ", "I", " ", "doubt", " ", "it", " ", "matters"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "used", " ", "an", " ", "initial", " ", "delay", " ", "parameter", " ", 
      "based", " ", "on", " ", "discussions", " ", "between", " ", 
      RowBox[{"K", ".", " ", "DiSimonie"}], " ", "and", " ", 
      RowBox[{"B", ".", " ", "Buckingham"}], " ", "of", " ", "Stanford"}], 
     " ", "-", " ", 
     RowBox[{"10", " ", "min", " ", "for", " ", "Fiasp"}]}], ",", " ", 
    RowBox[{"20", " ", "min", " ", "for", " ", "Novolog"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"for", " ", "Fiasp"}], ",", " ", 
    RowBox[{
    "decent", " ", "fit", " ", "with", " ", "peak", " ", "of", " ", "85", " ",
      "min"}], ",", " ", 
    RowBox[{"delay", " ", "of", " ", "10", " ", "min"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"for", " ", "novolog"}], ",", " ", 
    RowBox[{"delay", " ", "of", " ", "20", " ", "min"}], ",", " ", 
    RowBox[{"peak", " ", "of", " ", "92", " ", "min"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"again", ",", " ", 
    RowBox[{"room", " ", "here", " ", "for", " ", "optimization"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"loopshift", "[", 
     RowBox[{
     "peakActivityTime_", ",", "actionDuration_", ",", "initialDelay_", ",", 
      "t_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"t", "<", "initialDelay"}], ",", "0", ",", 
      RowBox[{"loopiob", "[", 
       RowBox[{"peakActivityTime", ",", "actionDuration", ",", 
        RowBox[{"t", "-", "initialDelay"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dloopshift", "[", 
     RowBox[{
     "peakActivityTime_", ",", "actionDuration_", ",", "initialDelay_", ",", 
      "t_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"t", "<", "initialDelay"}], ",", "0", ",", 
      RowBox[{"dloopiobdt", "[", 
       RowBox[{"peakActivityTime", ",", "actionDuration", ",", 
        RowBox[{"t", "-", "initialDelay"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"loopiob", "[", 
         RowBox[{"55", ",", 
          RowBox[{"6", "*", "60"}], ",", "t"}], "]"}], "*", "100"}], ",", 
       RowBox[{"fiaspiob", "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"loopshift", "[", 
         RowBox[{"85", ",", 
          RowBox[{"6", "*", "60"}], ",", "10", ",", "t"}], "]"}], "*", 
        "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.1", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"dloopiobdt", "[", 
         RowBox[{"55", ",", 
          RowBox[{"6", "*", "60"}], ",", "t"}], "]"}], "*", "100"}], ",", 
       RowBox[{
        RowBox[{"fiaspiob", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"dloopshift", "[", 
         RowBox[{"85", ",", 
          RowBox[{"6", "*", "60"}], ",", "10", ",", "t"}], "]"}], "*", 
        "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.1", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "blue", " ", "curves", " ", "are", " ", "the", " ", "original", " ", 
     "loop", " ", "parameters"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"FIASP", " ", "Fit"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.7173601203395243`*^9, 3.717360121497055*^9}, {
   3.717363111363071*^9, 3.7173631232534847`*^9}, {3.71736325250591*^9, 
   3.717363275658648*^9}, {3.7173633290405693`*^9, 3.7173633292305803`*^9}, {
   3.717363372510663*^9, 3.717363393028996*^9}, 3.717363581547907*^9, {
   3.717363629575677*^9, 3.7173636296639557`*^9}, {3.717363678209262*^9, 
   3.717363706310231*^9}, {3.71736918761439*^9, 3.717369193217144*^9}, {
   3.717370221627553*^9, 3.7173702427775717`*^9}, {3.7174112316394*^9, 
   3.717411267087723*^9}, {3.717411329853747*^9, 3.71741134164149*^9}, {
   3.717411430979466*^9, 3.717411431540842*^9}, {3.717413173707409*^9, 
   3.717413208286528*^9}, 3.717413631107966*^9, {3.717413684030442*^9, 
   3.717413717721465*^9}, {3.717413756085167*^9, 3.717413826477048*^9}, {
   3.718419645731844*^9, 3.718419646237083*^9}, 3.718449570919243*^9, {
   3.718452244969014*^9, 3.718452287559764*^9}, {3.718452449044427*^9, 
   3.718452453732634*^9}, {3.718452483755344*^9, 3.718452569383932*^9}, {
   3.7184526429824667`*^9, 3.7184527139241037`*^9}, {3.718453445267708*^9, 
   3.718453445614088*^9}, {3.718453533884173*^9, 3.7184535408343973`*^9}, {
   3.718710475020974*^9, 3.718710492825549*^9}, {3.7187170076082706`*^9, 
   3.718717040906747*^9}, {3.718717075738862*^9, 3.718717080454132*^9}, {
   3.718717188563465*^9, 3.71871721182987*^9}, {3.718723972386177*^9, 
   3.718723992186522*^9}, {3.7187240475503273`*^9, 3.718724131690308*^9}, {
   3.7199226380890007`*^9, 3.71992281141879*^9}, {3.7199228549403973`*^9, 
   3.719922897949739*^9}, {3.719924133482473*^9, 3.71992413782516*^9}, {
   3.7201020240180492`*^9, 3.720102035552134*^9}, {3.721932848844193*^9, 
   3.721932876517859*^9}, {3.72193292480802*^9, 3.721932930350183*^9}, {
   3.7219329607064047`*^9, 3.721932965113522*^9}, {3.721933062494459*^9, 
   3.721933148083802*^9}, {3.721933179528572*^9, 3.721933191891156*^9}, {
   3.7219332312239103`*^9, 3.7219332489062862`*^9}, {3.7219332827936153`*^9, 
   3.721933286953741*^9}, {3.722073079961067*^9, 3.722073140462351*^9}, {
   3.722073175472261*^9, 3.7220731792967787`*^9}, {3.722074611638885*^9, 
   3.722074694674302*^9}, {3.722074737356583*^9, 3.7220749611315107`*^9}, {
   3.722075109994383*^9, 3.722075120566182*^9}, {3.722076318110278*^9, 
   3.722076356468503*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
0Wj/A/e9SLc=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
vWn9/wCCZkBb
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQPdt/02WRWTvtGaBgtlPxnD9vT8H5W9a1pZe3X4Hz
D6YInDUJeQjn99ev+q9W+h7OnxqVv6n19l84X+LERe6tfLwOMP7RzN96Rz4g
+EXcqkGXL/HB+WnqNmcqvAXg/ANZ/ULT+YXg/OKPpvMvTxeF82/9a9rhs0IG
zg/nSjW8piQL518RdV8VPxfBP6/DPadokhycn7T2pL2PnQKcr7jZ6s+EagT/
wY7VO67uQPBjj/QaxhsrwvkRtwOVizSU4Hzxh4fub0tF8K89M57zexGCP+XN
kgiHBwh+8CdR0VZZZThf6EfbxZNRCP6Fv997+WYg+KfblJfZHkXwAZWzZ+o=

         "]], 
        LineBox[CompressedData["
1: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
mWZmAnnof0Azh8c=
         "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.1, 360}, {0., 99.99989312158172}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"loopiob", "(", 
           RowBox[{"55", ",", 
             RowBox[{"6", " ", "60"}], ",", "t"}], ")"}], " ", "100"}], 
       RowBox[{"fiaspiob", "(", "t", ")"}], 
       RowBox[{
         RowBox[{"loopshift", "(", 
           RowBox[{"85", ",", 
             RowBox[{"6", " ", "60"}], ",", "10", ",", "t"}], ")"}], " ", 
         "100"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.717363127315217*^9, 3.717363279887247*^9, 3.7173633328376617`*^9, {
   3.717363381529538*^9, 3.717363427763083*^9}, 3.717363458812084*^9, 
   3.717363586765053*^9, {3.717363619403941*^9, 3.717363710676271*^9}, 
   3.717369154783934*^9, 3.717369198874198*^9, 3.7173697960766077`*^9, 
   3.717370012040134*^9, 3.717370229592701*^9, 3.71737063117102*^9, {
   3.717411238901764*^9, 3.717411271010792*^9}, 3.7174113457360973`*^9, 
   3.717411388438526*^9, 3.717411550826665*^9, 3.717412606128887*^9, 
   3.7174134424937696`*^9, {3.717414318372095*^9, 3.7174143612590837`*^9}, 
   3.717441329807569*^9, 3.718416350723941*^9, 3.718416495922419*^9, 
   3.7184166173346*^9, 3.718416815633799*^9, 3.7184169379451017`*^9, 
   3.718417240244135*^9, 3.7184173399485083`*^9, 3.718417470699005*^9, 
   3.718417634824255*^9, 3.7184188940707684`*^9, {3.7184195642344227`*^9, 
   3.718419587352829*^9}, 3.71841971078576*^9, 3.71842012418211*^9, 
   3.718420380885581*^9, 3.718449627837844*^9, {3.718452250346614*^9, 
   3.718452290850053*^9}, 3.71845257461874*^9, {3.718452651224374*^9, 
   3.718452718125997*^9}, 3.7184534498406982`*^9, 3.71845354437744*^9, {
   3.718710480745473*^9, 3.718710496807989*^9}, 3.718717153017084*^9, 
   3.718717220237405*^9, 3.718723997050559*^9, {3.718724052768166*^9, 
   3.718724095394946*^9}, 3.718724134932728*^9, 3.719066392628017*^9, 
   3.7193474705442553`*^9, 3.7193475227764378`*^9, 3.719921861513137*^9, 
   3.719922252306305*^9, 3.719923601649405*^9, 3.719923679179079*^9, 
   3.71992374978583*^9, 3.719923894309001*^9, 3.719924012607665*^9, 
   3.719924212745165*^9, 3.720101982580007*^9, 3.720102067807482*^9, {
   3.721932909623126*^9, 3.7219329335050163`*^9}, 3.7219329688267384`*^9, 
   3.7219331959646873`*^9, {3.7219332364761066`*^9, 3.721933255737852*^9}, 
   3.7219332913818703`*^9, 3.722073339417643*^9, 3.722075028775133*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwd1nk8VP/3B3AqKltFpdUWKtmSvTQHwzAzGCJLPolCSXZTIYpWRSRLkqJI
hVSIyCFJRNaEZBnmKkmUtSzf+/vdf+7j+biP+3487vuc9+tcaRdvK9dFPDw8
y3l5eP7vftviecvq5GLKu2L1Yf/HnnjbwD9l9mct5efze8dnxUMxP/ei+8lL
rZQy9aLwMO5FrDiysl7duo8Sf27JoxCIw+thjxfkA39RxLo+hyTvT8N4B+/n
F77MUY5bRCde3JWH6943CRaICEPSXwFBZkwZVh37p/x2VBi4JZxj1l6IfoJy
Vi3NIrCQV3uyRK4c3bbuqTvFWAnWbzyvXuStwHKP66KJK0QhTHTTtvcv3qD/
mMbdlsQ10K17yd9g8TvsnA8vYmZtgtf6y8ysWHVoK+C6s01mM3Q73PSsLK7D
1jW0x053NsOf7FXni2XqsUFRMMXvhgS8YPEraP6pR5ecGgpzrxSovMtQDIlu
QLsvllv8tsnAcLvKWRPbJuT5/0sWeEQXTSpUNiNVy2Xo9awc/Jc59RYZrbhY
ryVzka48JDX5T8mdbsU3BtTDtJPyUPo9Kc06sxUp5vJdjWPyUL/ooZgQzyfU
dR2q7ye2Qv0U3f1b3idUjfN7trxpO5jwfN4auuwzbvwVfsomQwliJ5xPWsV0
YNL6fR8ju5XA/VOkXlR+B66lbpEtF1cG/WTX/1LaO3DlrcoGhUhl2KTspaYt
1Yn8hku28nirwLGqSOJYTiee/vDGwyZFFeSeXmhpxi94RJK6nsdNDYbutkum
VX3F++qKb5PD1SA6PIH9cOArckxXe2vcVQNmx8Dei4u70Slg4K1Huxr01kSl
1UM3OtSc9/lE3wUFGv/ELxV3I8u/qvqxijrMD8fW4f0e3F1tzLaZ0YDbdZaS
Irm9aGI3FHJojSZkrBZbP/6qF62/R0Uc36kJI1qUnvfVvegp+Cnm3DFNUHLa
tpTS14spFoef5HRoQkNmMMVJrA/nP4f18r3SguVH//AHB/RhxbciemGQDmjX
OtcFK3Dw42lHy4oEHZjq45211uBgpwCPXd1zHfAy6b0lARz8rUhz5QzpwNHo
/VYRNhyU8f0UJnJAFyQ9zEVvhnHw/MxYvtvu3dAWevPm10YO0gR2SIrP7gGn
dz3bXY/24+z3tLvhG/RgLueFvrxfPz6vWSc1oq0HD4pW1LcF96PEFX7pqkA9
0O8RPs1/vR8nl3Jk/H/pgahkdFlafj9m8t2Sb+DshaAF+3uts/3oyF3xUJeX
AuNNsiVxfAMoWnVxa6YkBQT4jqoYigxg6PmAbWccKSDU6O7oLzmANotZCjva
KLC8P9x8g/4Ahp9dnFh5BECk8tb96HMD+N/oXtsZf4CVdg3N9lcGUPtQkLhK
BMCA7nattbEDOEIZS0xOA8iq+tzqcm8AHRa6k3y7Af5IdLUzywZQLfRVsqSd
Pswkhl7xnhrAvmDf1GCGAXjKdbwzdeLicP6SCzn2BpB0zoBn5AgXJ38mHu9x
NwAfg18lFz24KHSoTNvwvAEsKXzfFx/IRU2qYIvAawOooo3/23GVi9eEMpYm
KxvCBt9HU5R8LiYYaY982GMIh/lDR1SLuZgW+qF1jm4IP5c6LBYv42Lh6Fia
s7shcAaVc95Uc7Gvde+e7fcMweHQcoFbneT6d9p9ilZR4UbD9Dr6PBeh7bjt
kCQVFLWDbWMXEchYsaC3SZkKWnYKph/5CTx0Tk7wLJ0KW+LZHttXEHjV1S+D
FkGFX0K7010lCexVEupsG6cCoez/ek6PwB9ud8uXLTYC6cY+1wf6BE7eVXuo
u8oICi2oLH0jAgVF7QNSlYwgqOW18EEmgZqTGSJubkawVXiThKwDuX4ZxXDi
sxHclT+5ZsifwKHUUjfbQSOYNvmxRPckgfQwncjiSSOo07oqGxZEoADsajqz
xhjCt5ZKfD9L4OUKeSf+fcYQkr5ZXi+KwG9p98OPuhjDweAjZVoxBNLCpTJr
fY3BR6yvc2scQZ73DT+jY4whOvJbzbckAs+/FQ4W/2gM9aM+90buEzjwIDL1
9FdjSBn+GpSQSaDhhaVvvgwbw53iqB3qjwhcZMy7/J4gDZxit2pb5hJ4tno8
YZspDVQVnoqLFREYUvvluc5bGnh9Uk8vqyGw67Fd2+0WGmS5aUW//0Dg7quf
ZuY4NPjxtXbkfT2BfxkN8IbXBJhXVdRzmgg8Vf/mI51iAv+KN3ct6SCwPYfy
O9vcBLbkLj9d2UmgVnTpmhUHTeClRVfbqS5yv80LHVtCTGBhvPVvdQ+BAY2P
hg68MoEH4e3fp7kEtubJi5TVmMCmrrE4r0ECd8Xe3ynVYQL3rANMv3wj8Lfl
nVMDUybQQD3x79YPAn1aYvhPaJjCVe+coJxRAhtfCCs0UE3BWKc8rGuMQJWb
kWY7rU0hSnKifdEfAkesz9+c8DOFLuGUJxoTBHq2nZQJzTOFpTbaH9RnCHwe
0OyfhKbQv6FKc+NfAqdFlaqefzSFthWjkTOkL1hw3AeHTaF1g65I6iyBdT/3
FPPOmsI6mTazI3MEil5LFNgkSAdfQ4FEmXkCU98zc1jb6WBv/8vt0gJZL7eH
8x7adNjDGZpT4hlEBb5FrAs0OjAKxbCO9Ev9l7+LXemwr0qv9zfvIM73rKK2
BtBhrMyWFbRoEKmhnvEjEXRwudIo8Jd04ytp7S3pdNi2pS6Us3gQ19qHXNF7
RgcnZ00TxpJBdJxq67Qtp4Pz/o/B2aTT43cq+jWQ6/mekubnG8Tvu66dudZN
By8RMX070qrNxMfMn3SQCGRz0kmzffSlKmbpoMYJECZIl4qk+H4RZAD3cmeN
NP8gLsqZfDOxgQEXE09I7idtwrBcvVKBATG7R9ZEkI7+/sRVQYcBFRlrC7JI
t17if0k1YYCYyO0l1aQ3yjsvc7JlwJeX24W6Sbu8LbE/7caA0gmPlp+ks1zW
PokLJN9X4nWZJD3C4zubc54BZl8v4xRp9bsfzN7HMUDuTtKfMdJBevJ3OekM
cJOr4OOSLv9ydnT2GQOuWUbNNZLmD/qiL17BABfZcE4BabN1mnE7Gxnw+4NE
aRzpm4UxA4weBoRldMV6kO60/qHhNsKAs/oqx3VJS/0xunR2jgEn3c9bLCbt
FnuvPVmICVPrqcZV5P5kq/zbXrCRCQHJjfvPkv5dbxPcoMAEyomLl9VJa3vm
1X3XYcKR/0o5fWQ9wgQEJZaYMiHsbKXnZdLvsly9JeyY8EJ3UGkbaSFaebm2
OxP8DU4oVZD1TYoIPHziAhPMqpOX9JD175ZuzL90kwmF3s+GDpOWLVfgT7/P
hMHKZYocsn+ezfZktVUwwWHZhq+1ZH9NJ+v+HW1kAh9r7QEN0nt14hmCvUz4
M/OZdYvsz9pA+ghlnglFQn/QjOzflaszKA7CZhDh50JLJfvb9vlCTMAmM1i1
p9LlG9n/AyP5ux7pmoFMhInvsX8EzrlLnhY9aQbuK18/lZwm0K+haXTbBTPQ
txWYY06Read5/iglzgzypeP7AybJ88733dbzqRnETZy/kT9OYPb955rvBs0g
e6Jt1Th5nmUEXXO7JszghZ5m5eQvApP8xOX/LDaHtKgcnfERMg/1Q9ZISZkD
+/CFqz3DBDr2GI2ftjOHsXuH7U+RedFsPH08xs0cznZuq7Uk88Qk93F/ZgD5
/EKfgjxBoPqZFS0tMeZAo7KasJ9AoY0dz5RqzKFblmL0spvA0v2e3n06FiA1
nGRT0kKgWpnE4BTNAhKZz7SMmwnMkms6KLLfAm49j3SsayTw5riG+W4/C2iY
yA2vJfPS88aCYvxjC+D/q1ofXU2giLtp4ANhFvg4X3+++xWBr9O71OxCWbDx
e90rkxTyex8rRP27wIL+0r769cnkvHh2ajA1igV9V8KWEIkEWpWvTuGmsODw
lso/3uR8+PaVyedfwoIbigfO0CMJXL3+9eeoaRZsfvaZKknOI4/rd0Iq/Syh
dvOtMS8zMh8TfrS5BVlC6xNd9lM6gRqpOjsFwi1BpOd34w8agTw5n7isWEvg
y6jdbGdAYHytsEX3U0uwCtyYtaBJYDlfqPTMsCXUbFVdfp2cr+IhB98pu1vB
xpKjJ5p/cnH10fZdLC8rWBsmm/NxiIui1lZpvoFW4EL5/bl6kPyfUDQOyY+w
gm2vDOfz+rjI06WkpnvPCiLrbs4c/MTFod1zd4w6rMD+T/mCYikXy/7dDnRk
7IOaIQubJ5e46BbcIRupYg0BB61XT6/lYpSWEOXHiA18eq+SlyM9gKxu/8l9
rbaQuc9176k5Di570npK/5Y9LCSImPF296Gji0eS5vkDMBSTPDec2ouX2176
73T7D5JtS5yma7rxsc/8+mdbncCpITvpyeUuzP9bqpxy6RAo/2zLdd3aiSKs
KQ2Z484QKuhybnhxOxZuqBPMdnYBvZiOXVIfP2FNZQgW7TsMBXdN480qWvDz
wqP2SxpHgO9H6van402465lvuYOCK9jnSmW9km7EyIkC4VERN7hc5DZXuK6e
zKM27WW/3MCY/wr9tmYtHsyLUZPluMOZjbTrzfuq0eNLdeyiqqOgyN3xLKrz
Lb4NvoUDr47Bpjd750vc3mDkX+MPptke4PJDKTJKsxzpQr57fKOOw9116xuf
FJaiXZxGSMo5TzhQeOXFnZXF6JzDlo50PQHiMeMlrnMF2JYR9+Av1Qt+J6g/
PGX4Am+JMSa9tLyhKag+53FyHu6IxLZmIR/4IND2z6cyG3dWZa73ueQDwWN1
TDd2FhaYMq+PzPgA7ekZ2q6BB+j9usdf2cMXKAlzdseq0rDxeDlltN8XJMp8
z6Zfu4O5h532xtn4gcOUk9i21CTclcCQLWr0gwK1rLrS4TgceSl3OtXUH755
vXm0s/k6ym8p43F75Q+9wlI6WSZXkK/mvvdT9QCYKeU9risVgS5FtFWdmQFg
Hqpbnm4ZghMJHdLv1gaCsVb3PpcBf1TJK1qvHhMIvdbSnKbNR5EQ3U+N4GVD
j3rv66X/2eLqYTmtM4vZwNobdbhhcj8aVE1sP8nHBrHb1w/3xezHuyfjVxxf
zoYhZnFrf5UN2nW1dlqtYoNhor3ywV3WWJuxz1dGmg3Dzkuv8W+yxFxty9QK
YEN2ztIEFWNj7FolHVtiwAbJJ1b8eNUIBX6MRhRQ2cBWvBTV0URF9zsxxx6Z
sGGPyp2CXCdDlFrUqB7LYsMTOVXjpnOANz6Yfzh0iA2DGYP6J1ADyx9IlDm4
sGEzLdDr0QF1HDkzkmd9hA2qcS+jfk+rIUM1OsHkKBu4O5wOPtJUxSXx9c6q
Pmw4lpHernZGDtW87lgr+LFh/WxBmsM7GTxEO0GTDWDDNz9No7hVUlg6I6S0
7hQbTCPa97o6rsGh5i5J0SA2jJWwXB3nV+C67GxRoRA2nNDRbpRk8qHxhRA+
/lA2SM/4xklRJ8oCDzKnF8LI/cGW3Kinq8v+ByEjYbM=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxN13c8lf/7B/BjZ4SMshKSjIaMQuTOjGQrUbJCKHvLyPwQKSuFJC1RqIRw
I0oSZZOsaA+7yPj6/f7w6vxzHs/HdV3v93Wf67zPfW5hWzfjk9QUCsWAjkL5
v/erBiXtXFfKVSmE6u+Y2MvkhdD8ZTGfX6tOtXAriXq3uOqfWXV/blxbXnXe
eNym4WIKQflzWVmxNIs0uvRIbTyZatVLsgMnl32oV23ut6tgoxLtqosrIif3
LtGt2n6/VKh/NOOqeRrfMj9mXbvqhlN/d9SPw57MW4zb21hXvalQ32fkEduq
HbYqN/sfZCco4mZujAEZJOfLk79itq9bdY3zBY50No5V890fMX/czrlqrwn5
a+3p3KsWSj5RNxKwftXNcv+NTVhuWHUunaDfXDMc0FWyhmofD0GRHraiXZ9B
Gt7WvrLmASzm3y/FLsS76rCnOz13jPKtum/pXJneHYFVd3Br55/I2rjq1m3M
mZ6XBFetp/CDa4Fl06qb1FsTomLgvNvmEQxUQiv96er4vsggbQtfqurtg4/X
J+w6ISu8avN3Rps9xUVW3fVRNvNvLmwyyc0dtXHzqjn+RL99aQG/WfydwHoZ
vkBzStekE6b8/0uUWP9B7sP12xmkjlD2n3yGLQTls2nss4wMUmOP7deqBVhV
X6z/zYTYqpVOfn394ePWVc85W8aJi4oTFIUzxroGGWSZe7PWaRvY11eFpiQb
lg++T86+g0tikhTCDkusWjrZs5jxLSyVv/uGwHPJVYvVzqfsfCq16tHnLkbe
f+Abzf1ry+W3EZQa6719XJdJ27ZDTYuesFBPdbRaEZz9IWf5leT2VfP/Oudv
dhNmz3jWKhm3Y9X06rRbKW47Vx15uiNY/g5MdTmvzXkYVrVR4jJcK73ikHVy
YVfJEF8R8qsEvJAzySVkBwe8qnM2y4S9hezW17DuWvUZH5o6yXD4+7X2DdYV
8KmmG6dTp+A7g/E80uwyBEWu7upg3C3y47TXs6Zt8BamY2dO6sD2mzR4KQ7w
Ce/Reuce2OJlpHunruyqe6ZMnzNFwmaCWwSIKjhFdu2Lvl647cCMh88svM7q
vQA7pxxB2aeuZ/v9IWno1fAifyestZF+UxiX/Kr3vtDyNZuDD5h/Dbbm3k1Q
vA9Pe7ZVkqZfEiJcdsHWgbvifA/BrsydSeGn4MjtAtnp1+FMA7t7hb3w6+SJ
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
B+8OOwh/a9t0wNcR7s+KbfY6Azc7TRh6+MBVshadZ4Lh+0t1R10jTAlK0T66
OpZh8kJKiq3jRdhd0sHF9hosc5jxrPlTeCa8IFG/G+7aEJKuMwaXFRrkaEzB
d/zLRNXm4Qx14buqVGYEUb70JZ9vmIxjjduusgYO7J0sVmKDl6UVO8W04cjY
0D8cobC3yedg9ugVS9Q25MkMkycFjahYE+DDX8qjmFNgrUciTIxX4a260xy0
d+E1Qw38y6VwE/Op7TNtcMIeFtVvP2Hxri/DYbNwvfeLyPVL8AnOm1sL6A6v
PM+pRRsrDpPzxeea9q+FpX+psJ8WgB22zZldloLbbrkN/9SB9wl/dNV0gnvJ
Z2zv3GBvq+sl7n4w22KIGX0onH/12J+r0SseuXfS+/MQOdSzYd+LVHj9+vaI
yTz4XJIOm84z+CdTzZVrw7DogaChpnHYImq32OwyPLOZ62U8wxGCuHgxp85g
iEyqm3ARZoOlbFpZn6yHny8XFOsJwjKBm1VuKMPXpjMa5yzgrl1mrFucYRY3
dlPDAPj22p+zY2ErZtJS/2U1RKoVvMoIioXf695VXpcE+3+JHryVDo/aLTov
PoYNB7xmTTrg0tFo26ARWOBbRkvuOGxw5kZk6W/43ESBUtMS/Mi7dPw9nTlR
Ux9Rq3J3iPz0m7w1wQKX0H4MISTgkHUsRy5owrqCMjsHbGBuKXOG7SHwgfs2
VUSUORE2pS3bVDxEBu5y8TI9Dxc+8pZwSoaH9oQMBl2BtfZdPHjjDlygkfek
qRT2N2q6wNsOq1uNOzr9gn2H5zYGz8J37Gk6LizC7z6xxN2gPUpQ3A56nPEa
Illd1hNPmGFvD4mCAV64z0+Zh14cvhVpO26qAXtcjG28YQ13pV+Ve3UGVs6+
nzMZDLsJlx2mjzxKEHsTHCu6h8jcvFoWvni4c+uruu2X4DX3Ovz3Z8Bn6Vua
xp/AkzYvBHK64EK2+obfY7BTVc0ZgxlYk0tV/e8CLOJSteE2rQVB8c98OR00
TFLq9n43ZoHf81TULHHCxt4POe7LwI2tBfbHjeBzZ++ufWwNq0jdKmVxh/nO
icaX+cF/enJP2IfCnTuF5dhjLAjrHyoua0RHyJLoa2sqE+GtI5ctXArhTJVL
BXzN8JFviWae72COjPill1/hX78Y230m4Wat2NvC83B+Fn3waypLQuiJVzPF
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQPdt/02WRWTvtGaBgtlPxnD9vT8H5W9a1pZe3X4Hz
D6YInDUJeQjn99ev+q9W+h7OnxqVv6n19l84X+LERe6tfLwOMP6tf007fFbI
wPnhXKmG15Rk4fwrou6r4uci+Od1uOcUTZKD85PWnrT3sVOA8yNuByoXaSjB
+eIPD93florgX3tmPOf3IgQ/+JOoaKusMpwv9KPt4skoBP/C3++9fDMQ/NNt
ystsjyL4ANfnSBM=
         "]], 
        LineBox[CompressedData["
1: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
/Jr/JgL/DzWaTi4=
         "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.1, 360}, {-0.7196005574141197, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"dloopiobdt", "(", 
           RowBox[{"55", ",", 
             RowBox[{"6", " ", "60"}], ",", "t"}], ")"}], " ", "100"}], 
       RowBox[{
         SuperscriptBox["fiaspiob", "\[Prime]", MultilineFunction -> None], 
         "(", "t", ")"}], 
       RowBox[{
         RowBox[{"dloopshift", "(", 
           RowBox[{"85", ",", 
             RowBox[{"6", " ", "60"}], ",", "10", ",", "t"}], ")"}], " ", 
         "100"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.717363127315217*^9, 3.717363279887247*^9, 3.7173633328376617`*^9, {
   3.717363381529538*^9, 3.717363427763083*^9}, 3.717363458812084*^9, 
   3.717363586765053*^9, {3.717363619403941*^9, 3.717363710676271*^9}, 
   3.717369154783934*^9, 3.717369198874198*^9, 3.7173697960766077`*^9, 
   3.717370012040134*^9, 3.717370229592701*^9, 3.71737063117102*^9, {
   3.717411238901764*^9, 3.717411271010792*^9}, 3.7174113457360973`*^9, 
   3.717411388438526*^9, 3.717411550826665*^9, 3.717412606128887*^9, 
   3.7174134424937696`*^9, {3.717414318372095*^9, 3.7174143612590837`*^9}, 
   3.717441329807569*^9, 3.718416350723941*^9, 3.718416495922419*^9, 
   3.7184166173346*^9, 3.718416815633799*^9, 3.7184169379451017`*^9, 
   3.718417240244135*^9, 3.7184173399485083`*^9, 3.718417470699005*^9, 
   3.718417634824255*^9, 3.7184188940707684`*^9, {3.7184195642344227`*^9, 
   3.718419587352829*^9}, 3.71841971078576*^9, 3.71842012418211*^9, 
   3.718420380885581*^9, 3.718449627837844*^9, {3.718452250346614*^9, 
   3.718452290850053*^9}, 3.71845257461874*^9, {3.718452651224374*^9, 
   3.718452718125997*^9}, 3.7184534498406982`*^9, 3.71845354437744*^9, {
   3.718710480745473*^9, 3.718710496807989*^9}, 3.718717153017084*^9, 
   3.718717220237405*^9, 3.718723997050559*^9, {3.718724052768166*^9, 
   3.718724095394946*^9}, 3.718724134932728*^9, 3.719066392628017*^9, 
   3.7193474705442553`*^9, 3.7193475227764378`*^9, 3.719921861513137*^9, 
   3.719922252306305*^9, 3.719923601649405*^9, 3.719923679179079*^9, 
   3.71992374978583*^9, 3.719923894309001*^9, 3.719924012607665*^9, 
   3.719924212745165*^9, 3.720101982580007*^9, 3.720102067807482*^9, {
   3.721932909623126*^9, 3.7219329335050163`*^9}, 3.7219329688267384`*^9, 
   3.7219331959646873`*^9, {3.7219332364761066`*^9, 3.721933255737852*^9}, 
   3.7219332913818703`*^9, 3.722073339417643*^9, 3.7220750289380617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"loopiob", "[", 
         RowBox[{"75", ",", 
          RowBox[{"6", "*", "60"}], ",", "t"}], "]"}], "*", "100"}], ",", 
       RowBox[{"novoiob", "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"loopshift", "[", 
         RowBox[{"92", ",", 
          RowBox[{"6", "*", "60"}], ",", "20", ",", "t"}], "]"}], "*", 
        "100"}], ",", 
       RowBox[{"mdtiob5hr", "[", 
        RowBox[{"t", ",", "0"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.1", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"dloopiobdt", "[", 
         RowBox[{"75", ",", 
          RowBox[{"6", "*", "60"}], ",", "t"}], "]"}], "*", "100"}], ",", 
       RowBox[{
        RowBox[{"novoiob", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"dloopshift", "[", 
         RowBox[{"92", ",", 
          RowBox[{"6", "*", "60"}], ",", "20", ",", "t"}], "]"}], "*", 
        "100"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0.1", ",", "maxt"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Novolog", " ", "Fit"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQve6fz7HUTa8dL2jsPAWimY29L4DoFfKvLoPo3dKu
N0A0/6r41yC6pb/qPYjWaewG07MkFrmmAenT+gJuIPrenUx/EM0ufjEIRF8I
04wG0WHrzcH0OZ28VBCdz2+ZBqJP1DzPAdHbigwqQHTmsZU7QfSDfwwHQbRK
/JcnJUD6g7rGUxC9KPeyY+CW144bbtwH06pnpswIAtKhxjEzQfQk0QnnQXTf
rzlg+p2t8DUQLR6mDaazPeJMEoF0YSOEtlgrZWa4/bXjo6uPwPSPtikybLtf
O+ZIFsiB6FffkgNAdGzAklgQncJsnAqiHxnMBNPX+qIKQPTSsuRCEK23O7kU
RJ+98QtMf/rwKMsbSP+JjcwG0QA0T8KO
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
inHU+5zhwlqIz///J3Me+T8ZT/DC
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQPdt/02WRWTvtGaBgtlPxnD9vT8H5W9a1pZe3X4Hz
D6YInDUJeQjn99ev+q9W+h7OnxqVv6n19l84X+LERe6tfLwOMP6tf007fFbI
wPnhXKmG15Rk4fwrou6r4uci+Od1uOcUTZKD85PWnrT3sVOA8yNuByoXaSjB
+S7mSa/2/lGF85ltLy9jslKD8w85uSS7lyP49n5qdy58RPCtUl+dffxMHc43
mFy0kfOiJpwv/b6pInSpLpw/QzL4XNc9BF/MRVnlgLgenC8w8/B5rS4En82Z
RZ0hXx/Orzx9KCt0jgGcv+PBKtEPOxD8b18nHei6iuCXKCSLHeAzhPPzSpkP
aTUi+CnyLpIMaUZw/mITnSOzmhD8R54i+abzEfz4kidHsm4g+PM6z+SzfkXw
78zbIrVA0BjOjzrZUnDVC8GfeS9HuiAdwb/xOeQYVwuCL8ZpW7h0AYIfKqcq
47AXwZ9izHv81k0EP/Ww4OV5jxB8ALIckHc=
         "]], 
        LineBox[CompressedData["
1:eJwV1Ak0VdsfB3AS+aOBUhoklEpEcg2J/U24JHVFHBky5JZU18W5KCSZ0kSe
pKJUz2ugUipJhqLMQ4XkklQy5XUrQoP/eWetvc76rH3W77d/e//OVvXmbfGd
JCYmls2M/97n1g5peSnrw6JJLOTPBIWTCbmBlhv10dmVen2YcX1GqnLXLn00
LB4LG2Qsdzeicn+sPnI+Vfp2Mbat9A1SvKQPA/41XhPjxA67hbeL9eG6wyy9
hHHlV1bVhnZ9+JVofrjOeIr0wuCPP/RhLZyxJYWxlbKUStQsFq4HnPoQyjhG
b6hq3ioW2Cc4Ga6Mn7Jbgu/ZsaB4eSDChPEk92IVzm4WQsIkEpQYIzC7uj+O
hXAjw8df/1A4GH+Cjr3MwtQdS1SqGRefFyxaVMqCVof/rUzGJs+tBFvHWLg3
TeBFGFtT/eGeigbYJHiULMfYse/4Yf9VBljGOarQ+pvCHtnmpEN+BjDqbpbd
wTj0fGjasVgDTO9zjNdgHKO9IDMtywCVE1yXnl8Uzm/2uZHbZgDTv6ymeDC+
2iV1p2DYAB6FM3sUGefzrxc8lTfEsXVBqjU/KdSliCrabAyxmdt9V5vxn9aD
XZKFhuj10eG/HKMg46f+aUaLIXjj6zwEjGePP/s8/6shqLdVd2cz1lkw7ecq
TSPw1Bdlbh6l4Ol5XtHjrBG2xs1KvzTCrF9EFvjdN8LhGIlvuoxDo9+rBb8w
wnxljbKiYQpJVzR1E2WM4RT6pqT2O4Wy3oIN9/cboyr3Jq/+K3P+YW72ZaeN
Ebfpc4o14zcyYlTtHWPcTBkzLBVR+KrF9u3uN8ZSL1PJq18oqPGbD05zXYO0
6ZeFLkPM/oyJ8rkmJrCQPFfM7mPyJaY+4jubIDJky9Gzvcx+zTd+Eh5kgnbH
i0P9nyjcM41qOHXDBDHLMyNjeij0HJrWXzx/LX7RrgNn31Ngy6xQmfNrLfKk
hTpOHRR+9WVdiJ5nCgn7Xjm+kMKdKqVFQ0amKOWWaB9pp7DwiJRqBW2Kc8/r
1uW1URiZ0q0W9K8peO740NVMIVsyXaOh2wxk+4PTJXUU3D5O/2eNOMEtie6o
W7UUFCrilmarELQNRFWfr6EQGRO8LMKNQNNwMJpXRWGrBEdzRQuBe8vkguFy
CtFREmlPdwAlPiQ37hEF9y9mzmNBwKDEZRe7QgpGnvvn6Bxm2rbOL0r+IYUh
Iko7mwX4hD1df+o+hW0TnWf4nYDYXVEDnUdBL7LwrAq1DtLOJvueZVN4d4Cf
ecDWHItsi5XTT1IYzJ8cm+tijocf1XdpnWDq+5zm/3anOWTX6OU+Psb8r57F
RutjzDGR4av15ggFAwvZlzKPzSHl/ELt52EKx+T+nnJ25Xqs8toj2xnCzGe8
DiiQt0D8Ra0Tuh4UjhaT9cOtlrAtX1+1cQmF/swirvMnS1TdbRESdQobDhon
PhyxhPRSz0FdVaZfsbopQtEKD1wNJKcqU0go09gu5WCFNw/7rHJnMf1QPvXA
nHorsIrmcE5KUAivbr9jXM7Gz68Kse/fOmNPS4ha5G0bTHeML5uX4ozfO1XC
FELs4G69WyO4zwmPLwn1qEgO3PwDNeWNnDAn3OPZyp1bYKStF9LP3QrugbbF
iTqO0BrIr1+b5ojjhnJkYGgraOvlDTVPHMDpDBpxeOWMpw/zVy1v3gLpG69C
16W7YLN42RXpb/Zw8959xiDGFaV3XMV3/+QgoeVB0CquO04SbZf6KRzmnvoz
N2/pdlyLL9kbZLsJ+eNFK8/He8Labnm5P3cjpnF+sNT8vZh4B+0WXtuA+/Nq
ZXO8vEFbLHgvarRG1dPwkgIHH9CC0UPlU9lonbj2Op61Ax2pn3O9aEuszuOX
btP0xceW37LHq9Yjcfje1C/TuKi0qKqda2MOO6UWI+l/ueBGjjuOM33icTtJ
b3H3TnzbvHrBqXoz7G5/njypYhdiFdSH9+qtRfmB9JIPhX7gdbCiRdHGSBy3
qrHJ2Y0j28wq+ZKG2CDHX8s/7g/b/sTWba/0QaWwws8f2gO1bMdUhzN68MoV
qCb67kVh+6/tG67oouXvlCvjFvswrtg4IHNXG+kzbUf2GfKwr2ZRc/YsTaxI
LGl5IReAxhsG78S/a2BVRfbcgPgA6GV213S+VMc9m40nh8YCsLg/Y3ORhip4
j98GrdzNRzUns3AkUhmN/qXky3s+9Ht7sy8+UcJNn+1mKVsDYRMmcl/6bBbE
/ntKA+GeG/J8Pk8eq0/bLi5oDMTg7VO/nvfOwNCDJWGZNkHoNM86uV5ZFhrq
xWLcwiCkZkwki2VKQrLqMu+WfjDyCqIMdALF4F3Aln+THQypC0Uuv7NHiXDi
SFn61WB8GH4xg3NklDixa/ku14Mx431JzX3/UWLbwnnxOjcYlOU301LdUaL/
3SWlNT8YK99mXnvy6AeZortHsflJMMrzveyim0dIzj9Jcxs7gxFYWMl+MWeY
DJ9uU302m0bpzNRD71pEZNvMh203lGgUht9f/fuRiBSfPJOcPI/GmgYvSidL
RBISnMXdF9LwMNToafFnLvP9zV3fltCIM1c/rjdJRCzcmy6osmhmfRmtc1Z/
IafUq5QjHGhwlK6UiTZ8Jj8uXG323kojZsn3NXfnfSZuCxKOWzvTCNex3Hmx
f5BoKLJ/z3Sl8Wu46s7vxEHyUKpCeN2bRkLsWZmndQOkq6/03Gs+jWPa4n4B
rv1E53bBXP0kJl+Sq+vMtE+kcImP01gyjYC6S4qKvE/E4tzUlOIUGpPXZr0y
YX8i2+K85WzSaIwum2w++qOHxLnJTbhn0rhtTyS0XHuIUNrzQ3wOk3/FyM7Q
ZR9JoteUW+2VNKISPWfzOruJYmvewMVqGsKsv45OetRNLm50W8atpdH4z64Z
hWnd5L5hXtaXBhq1P/Zqptp3k3dTXf+SbKXxoTukevzZO2JUeDNM5yMNt6FD
MyIKukiPgpPFYXEBOGsW/+Hs6SCzBpcYRkgI0FXpFr9yaQcxrxheHiIpQNQf
2SSfbiG5EJI63f9/AiSFZ9e8dBESSvjqzRZ5AaStFC5Ub2wn1X878NVUme/f
xzpNmLeRm0b2mWUQABkT27/ymolQXjX5kbkAozp9+mmsZiIz8OXwPQsm//LN
A0k/X5GdGUl+16wFqCy2uhad8IosmtSon8xh4jmw1d2zX5JTNZtqPD0FeJ14
rqtd1ERKryws3uYtgG5XwLSKoiYyFDF023GHAEptvCbxhCZiq3vitPUuAajw
2eW0ShOZnFrnpRsgQOnKLCXLLY1Eb1+Go2YgU6+vfU6lSiPxZO9lLw4WQKyc
u92svYEUjclpK4Uy8Tt6fY/MaiD9L4QqCvsFaDRTmrn0Tj1RyslRkAtn6rt+
fNyPU0+sYsMlpSIFCFgn+83+3zpCe2wcnTjI5Pvm9LLzRB35Px1B0to=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
6iZG885hJCHlHzINKD54V2+COov9H937OKw=
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQferxOaFrB4scGKBgzQFVaYfDCH5Z4d51OkcRfK7L
b66ynkTwjad5q+y4gODv+jdv7+xLCL5D+qew+isIvp/FzE63Gwh+1q1n767c
R/AXyTXt/PgOwRdYvsNPm7cYzn+3XbVynieCr6a8jyFtF4LPenJx/nqTEjg/
aYe74K1lCP7XaTcVj4mVwvn6G3ZImkxA8J8Jhbk0M5bB+SJvVM1rmRF8p6Nf
NctZEfz55VP5szkR/Ig7V24FCSL4p5YGFyopIvjrLALnHXRA8O8IKk7c7YTg
c73+0LzVBcFPnzshc6UHgq/AdMFkYgCCP+m03+mEBAT/wBK5fVFJCP672ncb
QlIQfG+DvmkeGQg+y9SziQYFCL5R3twQrSIEP8E9112lBMHf85NHV6ICwX91
6Y68UBWCL7FmjRBPDYLv1lrDylaH4JfG+fz4X4/gAwCZBJCL
         
         "]]}, {}}, {{}, {}, {}, {}, {}, {}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.1, 360}, {0., 99.99990630225972}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"loopiob", "(", 
           RowBox[{"75", ",", 
             RowBox[{"6", " ", "60"}], ",", "t"}], ")"}], " ", "100"}], 
       RowBox[{"novoiob", "(", "t", ")"}], 
       RowBox[{
         RowBox[{"loopshift", "(", 
           RowBox[{"92", ",", 
             RowBox[{"6", " ", "60"}], ",", "20", ",", "t"}], ")"}], " ", 
         "100"}], 
       RowBox[{"mdtiob5hr", "(", 
         RowBox[{"t", ",", "0"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7219335014222383`*^9, 3.7219335527085733`*^9}, 
   3.7219336244178143`*^9, 3.721933711004086*^9, 3.721933747344266*^9, 
   3.7220733397602587`*^9, 3.722075029104353*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxN2nc8Vv/7B/A7M3uXkKyEUsoIkZNQJJmlkBlC9grZ1AdJWQ0kURIVlRWO
XUZUZCUr2spOZfx8f394df9zHs/HdV33+33e532uc+7H4xa2cTM8RUWhUBRp
KZT/HW8cKergvl6mRhmaeXb8lD95KSRvWdzn56qTT7gVRb1bXPWP9Nr52zeX
V509EbNpuJBCUEItjOMZYkiDK0/UJxLXrHpJduDUsg/Vqk39duZvVKZZdWF5
5NSeJdpV2+3bGuIfzbBq3hevmZ6ysqy64fTf7fUTsCfTZsOON6yr3lSg5zPy
hG3V9ltUWv0PsROUhOzRsJJEkqvp1M/z0hyrrna6xJnKxrlqvgcjpk87uFbt
NSl/syOVZ9V9S+GlurkCBOWF6qio5nWyk+dAnmX6xlW3b2NK87wiuGpdxXHu
BeZNq27e334x6jycfdc0gn6NEEGhGDtsFMskbQqa1HT3whb1F3daygqv2vSd
gainhMiquz7Kpv3Ngo2meHiiNoqumnM++nXTCfjV4q+LrFfhS9SndYzewnoM
fXRXOcUIiiK3jc2rm6S2UMZ8Hv3mVWvstvlauQCr6Yn3v5oUX7Xyqa8vP3zc
surfTmYxEmISBOWRckdHbhxZ6t6qdcYa9vVVpS7KgOWDHpBz7+Ci8wmKoUcl
Vy2T6FnI8BremqdwW6BRatXiNX+SdjzbuurRRmcD73n4dms/S5n8NoIywfUs
Z+I/0ubN4eZFT1iopypa/RGc8SFzuUVKetX8P8P9TXJg9mt17VIx21dNt59m
C8Vtx6ojz3QGyefCa65mv3EahtWslbn1WWQIin78HWvey2Swrwj5VRJeyJzi
FrKFz7bUOpmkwd5CtuuqWXeu2tWHulYqDP5+s2O9VTl8uvn2meRpOHcwlleG
fRdBcfzz0d44mfw441XXvA3ezGjuekobttuksYFiD1t6j9Y79cAnmiLd3+rI
rrpn2riRMRI2EdwsQFTCSbIsz/t6Ycr/f+SINc+2nKKzvEZynHwvwM4lR1Ba
Leu4yjJJfa+G53k7YK2NdJtCueVXvee5lq/Jb/ig6dcgKx4FgjL/24xB+i5p
/OVihPNO2CpgZ4zvYdiF6W1C2Gk4UlogI/UWnHbE9n5BL/wycbKhV3v3qpe6
Q4Zoy2HG06Kf2LvgdX8ax/mnYJFYpxlxVkWCkiYyVtR0n9whwPp3pxR8cK/J
2oM2sJVVGs/J63BCtpRMDKPSqms+l+oUB8B9jBTT1iJ4atuBUyNf4aXKr87j
dMor+7GMyvXcI5LxSLznvAi8bmjnWWo1WMTjbQirGWz01Pa6cgsc+Xvyif2e
PatO41eqDfKCn6qGtl+5D9e2iXalP4fbLJ/3536A+yacPjxehj+GsX6t4lch
KFm0mvvePSXXNabRfIuFDzBu3bR+ARb8j064wUd11XP0IyJeP+H8T6a3B1j2
EpRgBwZnuUrS5nm7qM42mPeuVvZTHbgtulJM+DSsrHV/83wOfIf2mnj7CBwc
6S1xzlxt1SbU+lJbu2DGD415KTOw1XAGTxgDQVB0zLm/x9SRewz63hbzwutq
eFK+b4FbM+PWmWrB4aHUqXV28A+1ydTrt+ATywNXPQZgeTe+43fHYfZBkw3v
F+Bvepd7OZn3ERROxehO33qysar12kF+OChjP98TJXhXcPn1TaZwhmrujbkk
mHExOe3la3jM5bU59TBc3c+8UWkCvqF78L3rMuxbEZGezapOUDZGee2+WU9u
S/uzkV0aHg70yAg8BDNbVSnuj4QVNJg6GCth3eKdma69sLWE6Zk3s7CL9Tcj
Gpr9BMWVY11u8nPS93qwsgInHNbBIewoBMcx59Bf3w4XT0zesnaAhzv3qkhm
wnNapxguVsDMZbFdEz3wuinBSpFPsPDWotvGs/A2O82YaGoNgsJgrjk72UIq
pPe4l3LAsac8cw5EwEPSzH1dM/A3+5vVa6k1idBGW7nD06/IuZu77ipzwJTe
hosum2AmzuPeGdKwUGTIPiodWGEuh9XeHrbqm8qVvgnHVqntn+2Gv2ZU2B/7
BOuEKMWUzcF5lsUF/HRaROiVkyLC9a9JRkL29TkeuIkizasuB1+oEbekM4Lp
9vONxyfAkfUsgevb4NHsmIyz7+H9UfS1777DWacix1QXYCqtNQyZTAcICouh
/rPp12QN3d8jdlJw6POZFAlteOngZ7HCaDio+V2RUj3cn2fadaMD3hP79vfi
CHzd2XCj1RT851A7UbvmIEFh8z6reuENWcbcdD5aCPZ/WdumowbP6RWbdwTB
3q/ufTUrh2Uv394p1AtPGaT7j/6CDXfxpWnRaxOUHYX5bsadZCFnKpm7Dmaf
5vrAKA67dyTQnZGHfxhHJs16wi5dfiLBj+B5TumGojY46siIw6fvcOu4Stma
BZgzLpVRgEmHoHxnWnvh81vSVGrKTIEPznihW6AvCZfsK5kqOwW/KhdWFM2C
zX919R2rhr/Ixp2LG4Bl3nxsuzMO+7rvE6pZgCtY0zzeMR0iQu3/0w/82EVS
FczVzvLB/OLWay2PwXI3Ww6/SISr34VOLBTCh3kVEne+gpOKE0YPDcJ9xt/k
7X/AQtOa50MXYfvLmT3XmXUJymR93KBmNxnCyCRIow1fjfCxPRMFFy4M5nbV
wM0+Oj/UlmB27hy1EyyHiVDqLxv2ZXWTx4qWE7wF4Az9EyPxW+HRH09k7ynD
7ludut6bwosOm85y+sGdtF+OuTyE828XKTR+gkWYTj3on4Wveq4Xn6bWI0KF
/zML1+klWfua0hk44ch9QTxCQrA7+zDNYRXYfFBz5qwpLHeOraMjAWbm7y2U
boLDw2MlNbrh+S+qt06Mwa4GE7we0/BoaVbC+TVHCIqSqamuSR/56jx96JON
cMVRF7dhJThpRl5vjyfscmV5W3IebGptJ1DbCGvINDH9HIHLUwMjaCdhmWXp
v/zLsJGsu9I1On0i1Dw8jK5gZb0ctH2yWeCPNFzGS5pwZVb/LtNgWCRP6uLf
KH2CwvvUQO3wO/JCof+njIvweGnjPvVk2LCaO20sDd7Y/kh/Wz78+b0urdcz
OPhvpCulD+beUNl9cR4OEGLatZNiQFD8lRUc5d6Tg1uOx3XSwxo77n70Y4Pz
FGYJ/vWwt+blWWtxWM1YOi9XHu70OMWlYAw7XUoPqvOEX6V867IPgOUzlHYy
hhsQoQdHXuVavSev55yPLfgPphS8HdO/DDc/87iemgknN7McGXgIS33WLHVu
g6tpg4V/f4fFWVoD02bgWG6+LrUFeILfUeYDtSER+mysdbvQe/KoaHFMNBMs
vMtQ7SUf/J34Mc0lBYefFLe4dRBeH3SycbsDzO3YI6vvCnMaG97y8IHZiFbW
xCCYeZtW0JMIQ4Li4KxxWnuApKNRPvbrMkzpl96lnAnPxvJ8Jivgr3sW0zV7
4VGuSf8Ln+DBb6NGLbNwf/fJmu8LcF9dz3ZWGiMilDLofOX7ANn90DBtBxPc
eaOVwYATbjr0hOzaDlf9veFjfggu7bikf/M4/Ph+xNYRB/hR6uJVajf4QYQf
3WZf+L7bpJfWOTjXzHnYIdKIIFIqhR9ID5HpTEap45nwlWfKh70q4fPOItS/
e+Egfsay4Dn4LH2keOYi7Du9mFhDY0xQztBpCG8aJL0H/dZ8YII9WiZdV275
VbvcHtM+IAzbB/aKxeyAJe4GKYQegr+92XTQ1wHuT7/Q6uUKtzpO6nv4wJWy
J966BsEPlmqPu0QYE9W/Uw1LQobIS0lJNg6XYXcpe2ebm/CuowznTJ/Bs2H5
8XrdcNf64FTtMbi04EimxjSc618qpv4HvrZf+J7aGhMi9AgXbcfEEBnDGiOt
uhYO6J0qVGaDl2WU3oofgCMvhMxzhsDeRp+D2KNNCIJYq9DPPUyeEjRYw3oR
PvqlLIopCdZ6IsLIcAPeojPDSXMPXjvUwL9cDDcznZaefQNf3M2s9u0HLNH1
ZTh0Dq73fh65bgm25MrZkk97lAj9QoQPbhkm/xSGN+9jgWV+qrKfEYDtt/02
uboVfnPHbfiHNrxX+KOLpiPcS9axvXODvU/eKnL3g9kWg03oQuC8G+bzN6KP
EsTnAZusmiFyqGf93ufJ8Lp1HRFT2XB4gjabdh38g7H6+s1hWOxg4FDzBHwi
SkF8bhmeFeVuiqU/RlSbXUuKFB8mE2onnYXZ4K3W7awl6+DG5fxCXUF4V4Co
6m0V+ObMtRe/T8BdO01YNzvBzG7sxvpn4bssP+bGQo+t9OujadaLQ6R6fsu1
wAvwe517KhwJsP+X6ME7qfCo7aLT4lNYf8BrzqgTLh6NtgkcgQW+XWvLmoCP
uN6OLP4Fh0/mKzcvwU+8iyfe05oSxFRLo1jREPnpF3lnkhkuovkYTEjCwRzM
xy5pwjqCu3YMWMM8W03ppYPhgw+sK4koUyJ07dgYR9ggGbDT2cs4Di544i3p
mAgP7Q4eDLwOa+29fOh2LpyvkV3SXAz7GzRf2tAB7z854eD4E/Yd/r0xaA7O
taPuvLQIv/vEHHOb5jgRWmSSrZc3RLI6ryNKmGBvD8n8gQ1wn58KL50EfCfS
ZsJYA/a4fOHFbSu4K/WGXIsrrJLxIHMqCHYTLj1KF3mcIBZLu3YnD5FZ2TXM
fLHw2y0ttdJX4LX3O/33XYPP0bU1T5TAU9bPBTK74AK2+oZfY7BjZbXrkVlY
k1tt/98FWMS5cv1dmhMEkTVkmF83RFJq93w3ZIbf85ZXL3HBht6POR/sgl+0
59tZGMDh5+6xPLWCVbfeKWZ2h/nCxWJL/eD5nixLuxD47Q5hOfbzJwhK95e9
rokr+zH65tqKeHjLyNUTzgVwmuqVfL5W+Ni3eBPPdzDntdilpq/wz58MHT5T
cKvWhbvCf+C8dLqgl2vMiFC2Q9bT6ivP45lI/bMM8MKR4CwJCdjzvt9Mtxa8
7bh3+o6j8Cc6D63zp+B6i598smfgrCdnfg54wyFM3+tigmBzG6erCpFmBMVm
UL7BZYgcYe+c9qmGHUjVI08XYMXZPGVVGnOC6CA6Lz1d2T9becUbmOBeqyiO
w1xwXsrUQicffIjqZceoJPz9zN28GUV4h6a5Kfcx2FOAg07OB95vGDz5LAjm
vvCtf3+kOVFNm8aj7L/S3ypNX7TEwk+nGx4bJcJHLTNjbLPg+eYAa69CWDlr
B1tiO3zu7GhF0Tis99AgV3kWFhyrSqxdgH/ybQvRobEghnafdDcKHyKr9a85
vWGCrSu89o3wwVQSerxTkrDmMlUjx0H4QleJ1057eGJC33P3Gfg401d3VW+4
dnOE2/5AWIoQcNUOtyBCDUsnLUYGyb/ees4mCXDrvVBH6wzYlWvM5mw5zH5O
2+JyFzxcGHgifRQu+lhw7N4UzLfmwNGHv+EI/iHjp5STBOFts1bEbZD8Ln/W
6Bk9bKzPaVjDCs+V+er2SsHXRN9pTWrBKhfV9jHYwgNzt/cIh8BaHKrKW6JP
EqExV3P2xw+SD7d2KUpfhHm13HbLJsGhVmsVlG7ABsnKspr3YJFmFxmDErhe
9rXU6Q7YPl1+c9hPuK2kTfT8HLz7jYPIxUU48ztFOJHGkqjm+GqZNDdIrqW/
vukaE9y7p1UgZwOc5760oXALPCehEC+pBasPn6HKsoNN2gM3ES6wY+V/KgNe
cOD91ONBgXD8tRxfvogVL2rR5J0fJJ/41Dw6egXuNXj/9cotWIyRx5KpGnav
1e2IGIBTMhxZqsfhioDIAwsLsKOc9q7DVFZEaCHHDX7Old8PW18RAnRwgMix
I98Y4MgNAxblLHDe7O/UOQH41WueN7u2wR9I0Z+vZOG5gp3MbntgSk4p3141
mCFNTZJlvxVR7ZIy+jNzgORMbNzdrwULxBzWuq8Dq9ufDv10HHZUjyoXPQ0H
yiR217jD8YK3Ziz94as8EtQ7guBbzA85lkLgPGoFoZcRK/MTvVL4Pnblevyp
2J52HmbMlLnUmQxbamb/ZM7+J847sEny/j/1X9fraxb9E++Uc+x4+k99pUGo
ddk/+Xdcr/6s+Cc/IfbRueoV1z2b2XlokCzu8/T40Q9bbz6xy/L3P3FWP53x
BZh5PtEmkGJNVAvxvH+nsdL/hh8FMNDAxc0vr6TS/xNPp697zAozu++bbueB
bXieGq0Vg0vLJZ4Qu2DWbM3WNnnY9qLNqLnSP/m+IQtfVf7Jt0rjPktYE0Lz
uw5XZa/Ed3VpJB+AbWnZfQr1/onnRbz9Yg6z6v+SF3H+J38uJ7LL85/8NOOO
mAD4w8/7f+yC/6nfTy2iFr4yn8785ObqledrygntDdGw7ZdC9+n/YFYFNlbz
a3BpuMv9+lyYRZL/j/8j2Ka96aB0KXxRRNidvuKfeh//1GESHnnRXvWszprI
FKMWjeAaIVkEtnxMfg6XOkZGLHXBNk+HhRw+wiVmCW78P2BmKrWq9ll4t0nK
2L3f/9TnjjNHLsJxfzXkTq6xIUIDyxwnHgyTJXppZoq0sM2N3/OZ3DDz56Mp
DGKwdTztWOVWuFjuiaynLDx8nslMd/c/9e9swsX3wArby+9R1P75vjCO133q
NgSFo/Oq29jKfmxzdd1vCBfztTLlW8MHNtN3t7rDPTvUs8ZD4KAp9rdPI2wI
IbUoCseKhZ8O0gefhxv9HihrxcJOyufOsF6Ci0i+jowU+K9GqeKODDjuyDS1
fgEseGJ7u3sFXCuwuEap2oao7r9Mndw1RNoPtsitqYcZs647ND2HH9qdvn65
BZ7/QkcR6YAJt+xTRX3w67ODMh1fYJtIvoXpeZjuwJftFQtwHkOpdSTFlsi8
+DWp2nrl/ao1OkmXBp6ON3nOvRZW4Z7elsMGR15LuCK/HubJbrE4Kg7feUAn
6ScP63i8NVNTgn/KZsfTq8JJc5417YQtQbh4XxEfeE8qlu2bSdWAQ/cOHpfQ
hZvqgshSIzgmla3wrTWs45yVNeUGS7115l/jBzOpySexBcML09depYTZEqGW
e7Yrku/J77lLzIJRcL+FrXbOBbiV80XUtjj44scTftrXYb3ycUf7XHi7WMmw
90OYLT70REQxTNk/lsJYDk/80u64XAkP5T9g21BjS1DW+ecPt/eTr6y5dDPr
YUMGpR19Q3Dno5Oc3Itw/ak6vRsUO6K6UbGuiaeffMInEStCA2e3xz2/Rw8n
R05S72SCfX+UB6lxwkdNI2cPb4DXbVv/yWkL3L18r+e8PJwmqC1mpgTbqH52
264KbzE//2zNPjsitOvquD5HP/k9QJz+rQbsV2qXEagLU81lyYsYw7wem+zc
bOHt329cqfCEZxj3DFzyhcsk+yRtA+Dgg2d9FIJhDQfeGobwlfnJuP4sZOsn
27OPmj76Dz4xkvTz6GXY3YJDMDsTjuq5qDv5EGZf1/ohtQS+bsQYuJeErTzv
NXLU/W98e8XO9H5y8+WDnGON8NeHnyxKm+FHbdH3YtvgRm3qnp73cH99CJ34
OOxAVZXeOgNPqS3IeS3ApSdvhGpRThGhYXaXcjrfk+fOKbduoIHV03rXj9PD
a5/521YzwYIKs5dZ+GHZQo/qE1Lw0Y53TiE7Yf9ZTZ5sRTiGLtBJQQW+sf4R
+UINzpcY4zbbv+LpHWXWzgNklRKf07gWTB38o0rBBD5YW8sVags7j26rynaC
4+lSHZs84JvrWyvNfOBHEmu4fvjDtUoKjqFBcIeOcyVn6Cmi+sYHvcKm9yTv
JTVO83j4ZAeXQ04anL3+87MfefAXswp2xTL4j8vkqeYKmDlY/Jl59Yo9v3SN
F7wjN14yY/9ZB2/PTDgV9hw2qP3DdqcN9h61K29+C5dLKLFxj8LLLix2FlMw
e7B62c9ZWOSSH2v4b1g2M9+WexHWKBwuvUOxX+mfjGHbjveRDh2HbFvo4ZjZ
pywTrHDxL4eESQF45PcGrmkpeP6PZ+f0Tph1oSV5RhG+FuQ/560Ciy2KHZtV
gx+de13is9+eCFUUSM8z6CP3LJ3jndOCk6hGNv62gb/TaYkuBMN+56cigsLt
icz79EG/3vWRVGtvji5EwRcvHNI89x/MyzCfsxgHb2c0cFhKhDWY8iSWr8Pu
LOb3KffgNDbW7VQl8JaE8vjwcriI3eEnVRWseplLP6LGnhjawCV9QvMd+YKj
+hF1AzzAucGTphWe4fKUpe2AhdaJFdMNw4d5uxTX/oRZx2/z3pqD22o85pWW
4O35po50VA4EEcWT7u36jryUotbzhhaeCBU/eJMB1ndmKXVmgV9z3/NLF4AN
qzR2t2+FORM51zvKwh0OQ3OUPbCc4XP7l3vhJJUHXdfUHYjMIzbc/93rI2fE
k7XstWBjjqDiXTrw2/L1vnbH4aN2j+VTHOF1SmE8O9zhbpYjs8/9YMV5+VNJ
gfDVEYG3ViHwfCu1pnSEA2F1O9LijHMfaVry9cnvaLjXKtp7awp8glFEziIH
5hv8yTWXD797XDkd/wRWyci2NSuF0y7EdmypgBc8PffPkLC5xfHH1XUOxNAh
MUH5k33ke7pZz6k38MlHCbvERmA20Uhewwm4OtlvKWQJdvGc8WOiciSs+K3J
TUdX9v8Rj8kUWrh+6w8nEQbYfa3zaAEz/KLGrrueCxYOPNn8jg9+M27wiEES
DrfSTNm9G96uWstWpwz3bVD7T28vHD33jKpvnyMxJEJvIhy80q86FINOacJx
cbvcgnThUc1tNolGcHLppoM11rDWVq7tP93gjFFmYTo/eC6djntjMJwVEHEx
N2zFtRupS4R7SL1jFHq5KPiP7LlQ8gJ8l/3Pb5042DRifND/Orx2bqjhTi5s
9bCvtPIhXObYeb+zGLbXNNhsVQ5zirRlfKuEq5Z0eP1qHInMuxRuw4pu0und
88tUDbD7bPYTq07Yhy28u+oD7J828fnMNzhA0vKPwDS84LYuYmYOPlf8kqn1
D7y0EJl0ewkO3a+yMZDqNBFqKH7xHVs3Gec3Z7NbGE69/yh3Wg3mnXLY2bL/
NEGcVp6sONNNXlfcVJ51AOYP6VIPOASnNVxsMTgC3zRc6Kccg7MGnX48PAnn
/j7AweoKP+DaLOdyDpY50V+xP+w0IbRoYb7nf/+3ykzU5I+Cd33SaZu6AD+R
pjrWHAcXl7s7nk2Cyw4MnpVIg6usK9Ki78P1gdfI0XKY3PnCKK8KLv8098mt
dmV+xttyXdK7yKfpm4PkG+FHRsbsf5vgO2ShYvRrOH0rmzVHLxxD3Vy45TPs
+y6Sau8v2OPy4xTqv7DLgRGppiXYYZGdjKdyIqxuXjbsf/mWtHmsZmRMB5tu
Sg8cZIH1Yv/cduKBlW2fzoSKwVv2uGumysIikxm95rthwbsvz4jsgTdYLKz5
vBfm5tqaUqDuRFRf46qYf/KWZAy5UKWoA1O+jX2sM4C/12bu7rOCe66bXZhw
g9voyh4F+sH1nut66UJgUkLzTGu4EyF0WShdYbaDLB/wWnMlGi5Oyko+FgMX
6ryW3BgPZ4jEBcimwzF/tFq082EdZg8Vj4vORLUPncIO+tfkM+MzE4/T4G3p
p7Pn7sN2NQ5LqY/h9LFTpkrP4PJfdrSMJNzFYFfUV+tMEHH//ZpMfEVO8dta
3m+EWbfbMAc1wyG+J6ureuGJqhPea77AEh9M27ImYCv6YxIa83DQhqNvuRfg
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
Vf+lI6knSJrkl9Yy7rDPSd355RD4/wAngH/J
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQPdt/02WRWTvtGaBgtlPxnD9vT8H5W9a1pZe3X4Hz
D6YInDUJeQjn99ev+q9W+h7OnxqVv6n19l84X+LERe6tfLwOMP6tf007fFbI
wPnS75sqQpfqwvkzJIPPdd1D8MVclFUOiOvB+QIzD5/X6kLw2ZxZ1Bny9eH8
ytOHskLnGMD5KfIukgxpRnD+YhOdI7OaEPxHniL5pvMR/PiSJ0eybiD4USdb
Cq56GcP5M+/lSBekI/g3Pocc42pB8EPlVGUc9iL4U4x5j9+6ieCnHha8PO8R
gg8APfBVgA==
         "]], 
        LineBox[CompressedData["
1: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

         "]]}, {}}, {{}, {}, {}, {}, {}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.1, 360}, {-0.5713514397523266, 0.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{"dloopiobdt", "(", 
           RowBox[{"75", ",", 
             RowBox[{"6", " ", "60"}], ",", "t"}], ")"}], " ", "100"}], 
       RowBox[{
         SuperscriptBox["novoiob", "\[Prime]", MultilineFunction -> None], 
         "(", "t", ")"}], 
       RowBox[{
         RowBox[{"dloopshift", "(", 
           RowBox[{"92", ",", 
             RowBox[{"6", " ", "60"}], ",", "20", ",", "t"}], ")"}], " ", 
         "100"}]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7219335014222383`*^9, 3.7219335527085733`*^9}, 
   3.7219336244178143`*^9, 3.721933711004086*^9, 3.721933747344266*^9, 
   3.7220733397602587`*^9, 3.722075029229939*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "matching", " ", "the", " ", "IOB", " ", "curve", " ", "is", " ", "one", 
      " ", "thing"}], " ", "-", " ", 
     RowBox[{
     "matching", " ", "the", " ", "derivative", " ", "of", " ", "the", " ", 
      "iob", " ", "curve", " ", "I", " ", "think", " ", "is", " ", "even", 
      " ", "more", " ", "important"}], " ", "-", " ", 
     RowBox[{
     "thats", " ", "what", " ", "gives", " ", "us", " ", "our", " ", "local", 
      " ", "BG", " ", "velocity", " ", "PLEASE", " ", "REMEMBER", " ", "all", 
      " ", "of", " ", "this", " ", "is", " ", "a", " ", "massive", " ", 
      "approximation", " ", "and", " ", "physiologically", " ", "not", " ", 
      "quite", " ", "right", " ", "as", " ", "it", " ", "ignores", " ", "all",
       " ", "sorts", " ", "of", " ", "things", " ", "like", " ", "liver"}]}], 
    ",", " ", "renal", ",", " ", 
    RowBox[{"counter", " ", "regulatory", " ", "and", " ", "the", " ", 
     RowBox[{"body", "'"}], "s", " ", "constant", " ", "changes", " ", "even",
      " ", "in", " ", "insulin", " ", "absorbtion", " ", "etc"}]}], " ", 
   "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQve6fz7HUTa8dL2jsPAWimY29L4DoFfKvLoPo3dKu
N0A0/6r41yC6pb/qPYjWaewG07MkFrmmAenT+gJuIPrenUx/EM0ufjEIRF8I
04wG0WHrzcH0OZ28VBCdz2+ZBqJP1DzPAdHbigwqQHTmsZU7QfSDfwwHQbRK
/JcnJUD6g7rGUxC9KPeyY+CW144bbtwH06pnpswIAtKhxjEzQfQk0QnnQXTf
rzlg+p2t8DUQLR6mDaazPeJMEoF0YSOEtlgrZWa4/bXjo6uPwPSPtikybLtf
O+ZIFsiB6FffkgNA9JWDxuEgetX2lGleQHrv+3fTQTQAX0qrrA==
  "]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7174107438257933`*^9, 3.717410793044406*^9}, 
   3.71741144399509*^9, {3.717412068350787*^9, 3.717412073436037*^9}, {
   3.717412142802899*^9, 3.717412149147759*^9}, {3.717416064706089*^9, 
   3.717416069078744*^9}, {3.717416109955339*^9, 3.717416236257811*^9}, {
   3.717416269524128*^9, 3.7174163435389767`*^9}, {3.717416389226798*^9, 
   3.717416423863597*^9}, {3.718419665957802*^9, 3.718419675632204*^9}, {
   3.718449570985503*^9, 3.7184495709921618`*^9}, 3.7220749847654257`*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "MIT", " ", "License", " ", 
     RowBox[{"(", "MIT", ")"}], "\n", "\[IndentingNewLine]", "Copyright", " ", 
     RowBox[{"(", "c", ")"}], " ", "2017", " ", 
     RowBox[{"Perceptus", ".", "org"}], "\n", "\[IndentingNewLine]", 
     "Permission", " ", "is", " ", "hereby", " ", "granted"}], ",", 
    RowBox[{"free", " ", "of", " ", "charge"}], ",", 
    RowBox[{
    "to", " ", "any", " ", "person", " ", "obtaining", " ", "a", " ", "copy", 
     "\n", "of", " ", "this", " ", "software", " ", "and", " ", "associated", 
     " ", "documentation", " ", "files", " ", 
     RowBox[{"(", 
      RowBox[{"the", " ", "\"\<Software\>\""}], ")"}]}], ",", 
    RowBox[{
    "to", " ", "deal", "\n", "in", " ", "the", " ", "Software", " ", 
     "without", " ", "restriction"}], ",", 
    RowBox[{
    "including", " ", "without", " ", "limitation", " ", "the", " ", "rights",
      "\n", "to", " ", "use"}], ",", "copy", ",", "modify", ",", "merge", ",",
     "publish", ",", "distribute", ",", "sublicense", ",", 
    RowBox[{
     RowBox[{"and", "/", "or"}], " ", "sell", "\n", "copies", " ", "of", " ", 
     "the", " ", "Software"}], ",", 
    RowBox[{
    "and", " ", "to", " ", "permit", " ", "persons", " ", "to", " ", "whom", 
     " ", "the", " ", "Software", " ", "is", "\n", "furnished", " ", "to", 
     " ", "do", " ", "so"}], ",", 
    RowBox[{"subject", " ", "to", " ", "the", " ", "following", " ", 
     RowBox[{"conditions", ":", 
      RowBox[{
      "The", " ", "above", " ", "copyright", " ", "notice", " ", "and", " ", 
       "this", " ", "permission", " ", "notice", " ", "shall", " ", "be", " ",
        "included", " ", "in", " ", "all", "\n", "copies", " ", "or", " ", 
       "substantial", " ", "portions", " ", "of", " ", "the", " ", 
       RowBox[{
       "Software", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "THE"}],
        " ", "SOFTWARE", " ", "IS", " ", "PROVIDED", " ", 
       "\"\<AS IS\>\""}]}]}], ",", 
    RowBox[{"WITHOUT", " ", "WARRANTY", " ", "OF", " ", "ANY", " ", "KIND"}], 
    ",", 
    RowBox[{"EXPRESS", " ", "OR", "\n", "IMPLIED"}], ",", 
    RowBox[{
    "INCLUDING", " ", "BUT", " ", "NOT", " ", "LIMITED", " ", "TO", " ", 
     "THE", " ", "WARRANTIES", " ", "OF", " ", "MERCHANTABILITY"}], ",", 
    RowBox[{
    "FITNESS", " ", "FOR", " ", "A", " ", "PARTICULAR", " ", "PURPOSE", " ", 
     "AND", " ", 
     RowBox[{"NONINFRINGEMENT", ".", "IN"}], " ", "NO", " ", "EVENT", " ", 
     "SHALL", " ", "THE", "\n", "AUTHORS", " ", "OR", " ", "COPYRIGHT", " ", 
     "HOLDERS", " ", "BE", " ", "LIABLE", " ", "FOR", " ", "ANY", " ", 
     "CLAIM"}], ",", 
    RowBox[{"DAMAGES", " ", "OR", " ", "OTHER", "\n", "LIABILITY"}], ",", 
    RowBox[{
    "WHETHER", " ", "IN", " ", "AN", " ", "ACTION", " ", "OF", " ", 
     "CONTRACT"}], ",", 
    RowBox[{"TORT", " ", "OR", " ", "OTHERWISE"}], ",", 
    RowBox[{"ARISING", " ", "FROM"}], ",", 
    RowBox[{
    "OUT", " ", "OF", " ", "OR", " ", "IN", " ", "CONNECTION", " ", "WITH", 
     " ", "THE", " ", "SOFTWARE", " ", "OR", " ", "THE", " ", "USE", " ", 
     "OR", " ", "OTHER", " ", "DEALINGS", " ", "IN", " ", "THE", "\n", 
     RowBox[{"SOFTWARE", "."}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7174107438257933`*^9, 3.717410793044406*^9}, 
   3.71741144399509*^9, {3.717412068350787*^9, 3.717412073436037*^9}, {
   3.717412142802899*^9, 3.717412149147759*^9}, {3.717416064706089*^9, 
   3.717416069078744*^9}, {3.717416109955339*^9, 3.7174161589751253`*^9}}]
},
WindowSize->{808, 680},
WindowMargins->{{12, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 13419, 311, 1482, "Input"],
Cell[14002, 335, 24411, 478, 267, "Output"]
}, Open  ]],
Cell[38428, 816, 1365, 33, 117, "Input"],
Cell[CellGroupData[{
Cell[39818, 853, 600, 13, 32, "Input"],
Cell[40421, 868, 84423, 1438, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124881, 2311, 2079, 47, 138, "Input"],
Cell[126963, 2360, 2309, 33, 32, "Output"],
Cell[129275, 2395, 2310, 33, 32, "Output"]
}, Open  ]],
Cell[131600, 2431, 1176, 31, 117, "Input"],
Cell[132779, 2464, 3178, 72, 138, "Input"],
Cell[CellGroupData[{
Cell[135982, 2540, 2165, 45, 159, "Input"],
Cell[138150, 2587, 26510, 489, 258, "Output"],
Cell[164663, 3078, 42645, 754, 256, "Output"]
}, Open  ]],
Cell[207323, 3835, 10366, 282, 915, "Input"],
Cell[CellGroupData[{
Cell[217714, 4121, 4409, 92, 327, "Input"],
Cell[222126, 4215, 25167, 464, 258, "Output"],
Cell[247296, 4681, 34296, 615, 256, "Output"],
Cell[281595, 5298, 33937, 626, 260, "Output"],
Cell[315535, 5926, 34557, 619, 258, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350129, 6550, 15941, 317, 1482, "Input"],
Cell[366073, 6869, 33658, 624, 244, "Output"],
Cell[399734, 7495, 44378, 799, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444149, 8299, 2048, 52, 180, "Input"],
Cell[446200, 8353, 40330, 756, 244, "Output"],
Cell[486533, 9111, 42713, 776, 242, "Output"]
}, Open  ]],
Cell[529261, 9890, 1650, 31, 201, "Input"],
Cell[530914, 9923, 535, 7, 32, "Input"],
Cell[531452, 9932, 3600, 68, 516, "Input"]
}
]
*)

